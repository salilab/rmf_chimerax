# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RMF_HDF5')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RMF_HDF5')
    _RMF_HDF5 = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RMF_HDF5', [dirname(__file__)])
        except ImportError:
            import _RMF_HDF5
            return _RMF_HDF5
        try:
            _mod = imp.load_module('_RMF_HDF5', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RMF_HDF5 = swig_import_helper()
    del swig_import_helper
else:
    import _RMF_HDF5
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class RMF_HDF5_SwigPyIterator(_object):
    """Proxy of C++ swig::RMF_HDF5_SwigPyIterator class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RMF_HDF5_SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RMF_HDF5_SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RMF_HDF5.delete_RMF_HDF5_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        """value(RMF_HDF5_SwigPyIterator self) -> PyObject *"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_value(self)


    def incr(self, n=1):
        """
        incr(RMF_HDF5_SwigPyIterator self, size_t n=1) -> RMF_HDF5_SwigPyIterator
        incr(RMF_HDF5_SwigPyIterator self) -> RMF_HDF5_SwigPyIterator
        """
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_incr(self, n)


    def decr(self, n=1):
        """
        decr(RMF_HDF5_SwigPyIterator self, size_t n=1) -> RMF_HDF5_SwigPyIterator
        decr(RMF_HDF5_SwigPyIterator self) -> RMF_HDF5_SwigPyIterator
        """
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_decr(self, n)


    def distance(self, x):
        """distance(RMF_HDF5_SwigPyIterator self, RMF_HDF5_SwigPyIterator x) -> ptrdiff_t"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_distance(self, x)


    def equal(self, x):
        """equal(RMF_HDF5_SwigPyIterator self, RMF_HDF5_SwigPyIterator x) -> bool"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_equal(self, x)


    def copy(self):
        """copy(RMF_HDF5_SwigPyIterator self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_copy(self)


    def next(self):
        """next(RMF_HDF5_SwigPyIterator self) -> PyObject *"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_next(self)


    def __next__(self):
        """__next__(RMF_HDF5_SwigPyIterator self) -> PyObject *"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___next__(self)


    def previous(self):
        """previous(RMF_HDF5_SwigPyIterator self) -> PyObject *"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_previous(self)


    def advance(self, n):
        """advance(RMF_HDF5_SwigPyIterator self, ptrdiff_t n) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator_advance(self, n)


    def __eq__(self, x):
        """__eq__(RMF_HDF5_SwigPyIterator self, RMF_HDF5_SwigPyIterator x) -> bool"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___eq__(self, x)


    def __ne__(self, x):
        """__ne__(RMF_HDF5_SwigPyIterator self, RMF_HDF5_SwigPyIterator x) -> bool"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___ne__(self, x)


    def __iadd__(self, n):
        """__iadd__(RMF_HDF5_SwigPyIterator self, ptrdiff_t n) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___iadd__(self, n)


    def __isub__(self, n):
        """__isub__(RMF_HDF5_SwigPyIterator self, ptrdiff_t n) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___isub__(self, n)


    def __add__(self, n):
        """__add__(RMF_HDF5_SwigPyIterator self, ptrdiff_t n) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___add__(self, n)


    def __sub__(self, *args):
        """
        __sub__(RMF_HDF5_SwigPyIterator self, ptrdiff_t n) -> RMF_HDF5_SwigPyIterator
        __sub__(RMF_HDF5_SwigPyIterator self, RMF_HDF5_SwigPyIterator x) -> ptrdiff_t
        """
        return _RMF_HDF5.RMF_HDF5_SwigPyIterator___sub__(self, *args)

    def __iter__(self):
        return self
RMF_HDF5_SwigPyIterator_swigregister = _RMF_HDF5.RMF_HDF5_SwigPyIterator_swigregister
RMF_HDF5_SwigPyIterator_swigregister(RMF_HDF5_SwigPyIterator)

RMF_VERSION_MAJOR = _RMF_HDF5.RMF_VERSION_MAJOR
RMF_VERSION_MINOR = _RMF_HDF5.RMF_VERSION_MINOR
RMF_HAS_LOG4CXX = _RMF_HDF5.RMF_HAS_LOG4CXX
RMF_HAS_DEPRECATED_BACKENDS = _RMF_HDF5.RMF_HAS_DEPRECATED_BACKENDS
RMF_COMPILER_HAS_OVERRIDE = _RMF_HDF5.RMF_COMPILER_HAS_OVERRIDE
RMF_COMPILER_HAS_FINAL = _RMF_HDF5.RMF_COMPILER_HAS_FINAL
RMF_HAS_NOEXCEPT = _RMF_HDF5.RMF_HAS_NOEXCEPT

_types_list=[]
def get_data_types():
   return _types_list

class Ints(_object):
    """Proxy of C++ std::vector<(int)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Ints, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Ints, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(Ints self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.Ints_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(Ints self) -> bool"""
        return _RMF_HDF5.Ints___nonzero__(self)


    def __bool__(self):
        """__bool__(Ints self) -> bool"""
        return _RMF_HDF5.Ints___bool__(self)


    def __len__(self):
        """__len__(Ints self) -> std::vector< int >::size_type"""
        return _RMF_HDF5.Ints___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(Ints self, std::vector< int >::difference_type i, std::vector< int >::difference_type j) -> Ints"""
        return _RMF_HDF5.Ints___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(Ints self, std::vector< int >::difference_type i, std::vector< int >::difference_type j)
        __setslice__(Ints self, std::vector< int >::difference_type i, std::vector< int >::difference_type j, Ints v)
        """
        return _RMF_HDF5.Ints___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(Ints self, std::vector< int >::difference_type i, std::vector< int >::difference_type j)"""
        return _RMF_HDF5.Ints___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(Ints self, std::vector< int >::difference_type i)
        __delitem__(Ints self, PySliceObject * slice)
        """
        return _RMF_HDF5.Ints___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(Ints self, PySliceObject * slice) -> Ints
        __getitem__(Ints self, std::vector< int >::difference_type i) -> std::vector< int >::value_type const &
        """
        return _RMF_HDF5.Ints___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(Ints self, PySliceObject * slice, Ints v)
        __setitem__(Ints self, PySliceObject * slice)
        __setitem__(Ints self, std::vector< int >::difference_type i, std::vector< int >::value_type const & x)
        """
        return _RMF_HDF5.Ints___setitem__(self, *args)


    def pop(self):
        """pop(Ints self) -> std::vector< int >::value_type"""
        return _RMF_HDF5.Ints_pop(self)


    def append(self, x):
        """append(Ints self, std::vector< int >::value_type const & x)"""
        return _RMF_HDF5.Ints_append(self, x)


    def empty(self):
        """empty(Ints self) -> bool"""
        return _RMF_HDF5.Ints_empty(self)


    def size(self):
        """size(Ints self) -> std::vector< int >::size_type"""
        return _RMF_HDF5.Ints_size(self)


    def swap(self, v):
        """swap(Ints self, Ints v)"""
        return _RMF_HDF5.Ints_swap(self, v)


    def begin(self):
        """begin(Ints self) -> std::vector< int >::iterator"""
        return _RMF_HDF5.Ints_begin(self)


    def end(self):
        """end(Ints self) -> std::vector< int >::iterator"""
        return _RMF_HDF5.Ints_end(self)


    def rbegin(self):
        """rbegin(Ints self) -> std::vector< int >::reverse_iterator"""
        return _RMF_HDF5.Ints_rbegin(self)


    def rend(self):
        """rend(Ints self) -> std::vector< int >::reverse_iterator"""
        return _RMF_HDF5.Ints_rend(self)


    def clear(self):
        """clear(Ints self)"""
        return _RMF_HDF5.Ints_clear(self)


    def get_allocator(self):
        """get_allocator(Ints self) -> std::vector< int >::allocator_type"""
        return _RMF_HDF5.Ints_get_allocator(self)


    def pop_back(self):
        """pop_back(Ints self)"""
        return _RMF_HDF5.Ints_pop_back(self)


    def erase(self, *args):
        """
        erase(Ints self, std::vector< int >::iterator pos) -> std::vector< int >::iterator
        erase(Ints self, std::vector< int >::iterator first, std::vector< int >::iterator last) -> std::vector< int >::iterator
        """
        return _RMF_HDF5.Ints_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(int)> self) -> Ints
        __init__(std::vector<(int)> self, Ints arg2) -> Ints
        __init__(std::vector<(int)> self, std::vector< int >::size_type size) -> Ints
        __init__(std::vector<(int)> self, std::vector< int >::size_type size, std::vector< int >::value_type const & value) -> Ints
        """
        this = _RMF_HDF5.new_Ints(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(Ints self, std::vector< int >::value_type const & x)"""
        return _RMF_HDF5.Ints_push_back(self, x)


    def front(self):
        """front(Ints self) -> std::vector< int >::value_type const &"""
        return _RMF_HDF5.Ints_front(self)


    def back(self):
        """back(Ints self) -> std::vector< int >::value_type const &"""
        return _RMF_HDF5.Ints_back(self)


    def assign(self, n, x):
        """assign(Ints self, std::vector< int >::size_type n, std::vector< int >::value_type const & x)"""
        return _RMF_HDF5.Ints_assign(self, n, x)


    def resize(self, *args):
        """
        resize(Ints self, std::vector< int >::size_type new_size)
        resize(Ints self, std::vector< int >::size_type new_size, std::vector< int >::value_type const & x)
        """
        return _RMF_HDF5.Ints_resize(self, *args)


    def insert(self, *args):
        """
        insert(Ints self, std::vector< int >::iterator pos, std::vector< int >::value_type const & x) -> std::vector< int >::iterator
        insert(Ints self, std::vector< int >::iterator pos, std::vector< int >::size_type n, std::vector< int >::value_type const & x)
        """
        return _RMF_HDF5.Ints_insert(self, *args)


    def reserve(self, n):
        """reserve(Ints self, std::vector< int >::size_type n)"""
        return _RMF_HDF5.Ints_reserve(self, n)


    def capacity(self):
        """capacity(Ints self) -> std::vector< int >::size_type"""
        return _RMF_HDF5.Ints_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_Ints
    __del__ = lambda self: None
Ints_swigregister = _RMF_HDF5.Ints_swigregister
Ints_swigregister(Ints)

class Floats(_object):
    """Proxy of C++ std::vector<(float)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Floats, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Floats, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(Floats self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.Floats_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(Floats self) -> bool"""
        return _RMF_HDF5.Floats___nonzero__(self)


    def __bool__(self):
        """__bool__(Floats self) -> bool"""
        return _RMF_HDF5.Floats___bool__(self)


    def __len__(self):
        """__len__(Floats self) -> std::vector< float >::size_type"""
        return _RMF_HDF5.Floats___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(Floats self, std::vector< float >::difference_type i, std::vector< float >::difference_type j) -> Floats"""
        return _RMF_HDF5.Floats___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(Floats self, std::vector< float >::difference_type i, std::vector< float >::difference_type j)
        __setslice__(Floats self, std::vector< float >::difference_type i, std::vector< float >::difference_type j, Floats v)
        """
        return _RMF_HDF5.Floats___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(Floats self, std::vector< float >::difference_type i, std::vector< float >::difference_type j)"""
        return _RMF_HDF5.Floats___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(Floats self, std::vector< float >::difference_type i)
        __delitem__(Floats self, PySliceObject * slice)
        """
        return _RMF_HDF5.Floats___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(Floats self, PySliceObject * slice) -> Floats
        __getitem__(Floats self, std::vector< float >::difference_type i) -> std::vector< float >::value_type const &
        """
        return _RMF_HDF5.Floats___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(Floats self, PySliceObject * slice, Floats v)
        __setitem__(Floats self, PySliceObject * slice)
        __setitem__(Floats self, std::vector< float >::difference_type i, std::vector< float >::value_type const & x)
        """
        return _RMF_HDF5.Floats___setitem__(self, *args)


    def pop(self):
        """pop(Floats self) -> std::vector< float >::value_type"""
        return _RMF_HDF5.Floats_pop(self)


    def append(self, x):
        """append(Floats self, std::vector< float >::value_type const & x)"""
        return _RMF_HDF5.Floats_append(self, x)


    def empty(self):
        """empty(Floats self) -> bool"""
        return _RMF_HDF5.Floats_empty(self)


    def size(self):
        """size(Floats self) -> std::vector< float >::size_type"""
        return _RMF_HDF5.Floats_size(self)


    def swap(self, v):
        """swap(Floats self, Floats v)"""
        return _RMF_HDF5.Floats_swap(self, v)


    def begin(self):
        """begin(Floats self) -> std::vector< float >::iterator"""
        return _RMF_HDF5.Floats_begin(self)


    def end(self):
        """end(Floats self) -> std::vector< float >::iterator"""
        return _RMF_HDF5.Floats_end(self)


    def rbegin(self):
        """rbegin(Floats self) -> std::vector< float >::reverse_iterator"""
        return _RMF_HDF5.Floats_rbegin(self)


    def rend(self):
        """rend(Floats self) -> std::vector< float >::reverse_iterator"""
        return _RMF_HDF5.Floats_rend(self)


    def clear(self):
        """clear(Floats self)"""
        return _RMF_HDF5.Floats_clear(self)


    def get_allocator(self):
        """get_allocator(Floats self) -> std::vector< float >::allocator_type"""
        return _RMF_HDF5.Floats_get_allocator(self)


    def pop_back(self):
        """pop_back(Floats self)"""
        return _RMF_HDF5.Floats_pop_back(self)


    def erase(self, *args):
        """
        erase(Floats self, std::vector< float >::iterator pos) -> std::vector< float >::iterator
        erase(Floats self, std::vector< float >::iterator first, std::vector< float >::iterator last) -> std::vector< float >::iterator
        """
        return _RMF_HDF5.Floats_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(float)> self) -> Floats
        __init__(std::vector<(float)> self, Floats arg2) -> Floats
        __init__(std::vector<(float)> self, std::vector< float >::size_type size) -> Floats
        __init__(std::vector<(float)> self, std::vector< float >::size_type size, std::vector< float >::value_type const & value) -> Floats
        """
        this = _RMF_HDF5.new_Floats(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(Floats self, std::vector< float >::value_type const & x)"""
        return _RMF_HDF5.Floats_push_back(self, x)


    def front(self):
        """front(Floats self) -> std::vector< float >::value_type const &"""
        return _RMF_HDF5.Floats_front(self)


    def back(self):
        """back(Floats self) -> std::vector< float >::value_type const &"""
        return _RMF_HDF5.Floats_back(self)


    def assign(self, n, x):
        """assign(Floats self, std::vector< float >::size_type n, std::vector< float >::value_type const & x)"""
        return _RMF_HDF5.Floats_assign(self, n, x)


    def resize(self, *args):
        """
        resize(Floats self, std::vector< float >::size_type new_size)
        resize(Floats self, std::vector< float >::size_type new_size, std::vector< float >::value_type const & x)
        """
        return _RMF_HDF5.Floats_resize(self, *args)


    def insert(self, *args):
        """
        insert(Floats self, std::vector< float >::iterator pos, std::vector< float >::value_type const & x) -> std::vector< float >::iterator
        insert(Floats self, std::vector< float >::iterator pos, std::vector< float >::size_type n, std::vector< float >::value_type const & x)
        """
        return _RMF_HDF5.Floats_insert(self, *args)


    def reserve(self, n):
        """reserve(Floats self, std::vector< float >::size_type n)"""
        return _RMF_HDF5.Floats_reserve(self, n)


    def capacity(self):
        """capacity(Floats self) -> std::vector< float >::size_type"""
        return _RMF_HDF5.Floats_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_Floats
    __del__ = lambda self: None
Floats_swigregister = _RMF_HDF5.Floats_swigregister
Floats_swigregister(Floats)

class Strings(_object):
    """Proxy of C++ std::vector<(std::string)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Strings, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Strings, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(Strings self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.Strings_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(Strings self) -> bool"""
        return _RMF_HDF5.Strings___nonzero__(self)


    def __bool__(self):
        """__bool__(Strings self) -> bool"""
        return _RMF_HDF5.Strings___bool__(self)


    def __len__(self):
        """__len__(Strings self) -> std::vector< std::string >::size_type"""
        return _RMF_HDF5.Strings___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(Strings self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j) -> Strings"""
        return _RMF_HDF5.Strings___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(Strings self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j)
        __setslice__(Strings self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j, Strings v)
        """
        return _RMF_HDF5.Strings___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(Strings self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j)"""
        return _RMF_HDF5.Strings___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(Strings self, std::vector< std::string >::difference_type i)
        __delitem__(Strings self, PySliceObject * slice)
        """
        return _RMF_HDF5.Strings___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(Strings self, PySliceObject * slice) -> Strings
        __getitem__(Strings self, std::vector< std::string >::difference_type i) -> std::vector< std::string >::value_type const &
        """
        return _RMF_HDF5.Strings___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(Strings self, PySliceObject * slice, Strings v)
        __setitem__(Strings self, PySliceObject * slice)
        __setitem__(Strings self, std::vector< std::string >::difference_type i, std::vector< std::string >::value_type const & x)
        """
        return _RMF_HDF5.Strings___setitem__(self, *args)


    def pop(self):
        """pop(Strings self) -> std::vector< std::string >::value_type"""
        return _RMF_HDF5.Strings_pop(self)


    def append(self, x):
        """append(Strings self, std::vector< std::string >::value_type const & x)"""
        return _RMF_HDF5.Strings_append(self, x)


    def empty(self):
        """empty(Strings self) -> bool"""
        return _RMF_HDF5.Strings_empty(self)


    def size(self):
        """size(Strings self) -> std::vector< std::string >::size_type"""
        return _RMF_HDF5.Strings_size(self)


    def swap(self, v):
        """swap(Strings self, Strings v)"""
        return _RMF_HDF5.Strings_swap(self, v)


    def begin(self):
        """begin(Strings self) -> std::vector< std::string >::iterator"""
        return _RMF_HDF5.Strings_begin(self)


    def end(self):
        """end(Strings self) -> std::vector< std::string >::iterator"""
        return _RMF_HDF5.Strings_end(self)


    def rbegin(self):
        """rbegin(Strings self) -> std::vector< std::string >::reverse_iterator"""
        return _RMF_HDF5.Strings_rbegin(self)


    def rend(self):
        """rend(Strings self) -> std::vector< std::string >::reverse_iterator"""
        return _RMF_HDF5.Strings_rend(self)


    def clear(self):
        """clear(Strings self)"""
        return _RMF_HDF5.Strings_clear(self)


    def get_allocator(self):
        """get_allocator(Strings self) -> std::vector< std::string >::allocator_type"""
        return _RMF_HDF5.Strings_get_allocator(self)


    def pop_back(self):
        """pop_back(Strings self)"""
        return _RMF_HDF5.Strings_pop_back(self)


    def erase(self, *args):
        """
        erase(Strings self, std::vector< std::string >::iterator pos) -> std::vector< std::string >::iterator
        erase(Strings self, std::vector< std::string >::iterator first, std::vector< std::string >::iterator last) -> std::vector< std::string >::iterator
        """
        return _RMF_HDF5.Strings_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(std::string)> self) -> Strings
        __init__(std::vector<(std::string)> self, Strings arg2) -> Strings
        __init__(std::vector<(std::string)> self, std::vector< std::string >::size_type size) -> Strings
        __init__(std::vector<(std::string)> self, std::vector< std::string >::size_type size, std::vector< std::string >::value_type const & value) -> Strings
        """
        this = _RMF_HDF5.new_Strings(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(Strings self, std::vector< std::string >::value_type const & x)"""
        return _RMF_HDF5.Strings_push_back(self, x)


    def front(self):
        """front(Strings self) -> std::vector< std::string >::value_type const &"""
        return _RMF_HDF5.Strings_front(self)


    def back(self):
        """back(Strings self) -> std::vector< std::string >::value_type const &"""
        return _RMF_HDF5.Strings_back(self)


    def assign(self, n, x):
        """assign(Strings self, std::vector< std::string >::size_type n, std::vector< std::string >::value_type const & x)"""
        return _RMF_HDF5.Strings_assign(self, n, x)


    def resize(self, *args):
        """
        resize(Strings self, std::vector< std::string >::size_type new_size)
        resize(Strings self, std::vector< std::string >::size_type new_size, std::vector< std::string >::value_type const & x)
        """
        return _RMF_HDF5.Strings_resize(self, *args)


    def insert(self, *args):
        """
        insert(Strings self, std::vector< std::string >::iterator pos, std::vector< std::string >::value_type const & x) -> std::vector< std::string >::iterator
        insert(Strings self, std::vector< std::string >::iterator pos, std::vector< std::string >::size_type n, std::vector< std::string >::value_type const & x)
        """
        return _RMF_HDF5.Strings_insert(self, *args)


    def reserve(self, n):
        """reserve(Strings self, std::vector< std::string >::size_type n)"""
        return _RMF_HDF5.Strings_reserve(self, n)


    def capacity(self):
        """capacity(Strings self) -> std::vector< std::string >::size_type"""
        return _RMF_HDF5.Strings_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_Strings
    __del__ = lambda self: None
Strings_swigregister = _RMF_HDF5.Strings_swigregister
Strings_swigregister(Strings)

class Doubles(_object):
    """Proxy of C++ std::vector<(double)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Doubles, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Doubles, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(Doubles self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.Doubles_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(Doubles self) -> bool"""
        return _RMF_HDF5.Doubles___nonzero__(self)


    def __bool__(self):
        """__bool__(Doubles self) -> bool"""
        return _RMF_HDF5.Doubles___bool__(self)


    def __len__(self):
        """__len__(Doubles self) -> std::vector< double >::size_type"""
        return _RMF_HDF5.Doubles___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(Doubles self, std::vector< double >::difference_type i, std::vector< double >::difference_type j) -> Doubles"""
        return _RMF_HDF5.Doubles___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(Doubles self, std::vector< double >::difference_type i, std::vector< double >::difference_type j)
        __setslice__(Doubles self, std::vector< double >::difference_type i, std::vector< double >::difference_type j, Doubles v)
        """
        return _RMF_HDF5.Doubles___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(Doubles self, std::vector< double >::difference_type i, std::vector< double >::difference_type j)"""
        return _RMF_HDF5.Doubles___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(Doubles self, std::vector< double >::difference_type i)
        __delitem__(Doubles self, PySliceObject * slice)
        """
        return _RMF_HDF5.Doubles___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(Doubles self, PySliceObject * slice) -> Doubles
        __getitem__(Doubles self, std::vector< double >::difference_type i) -> std::vector< double >::value_type const &
        """
        return _RMF_HDF5.Doubles___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(Doubles self, PySliceObject * slice, Doubles v)
        __setitem__(Doubles self, PySliceObject * slice)
        __setitem__(Doubles self, std::vector< double >::difference_type i, std::vector< double >::value_type const & x)
        """
        return _RMF_HDF5.Doubles___setitem__(self, *args)


    def pop(self):
        """pop(Doubles self) -> std::vector< double >::value_type"""
        return _RMF_HDF5.Doubles_pop(self)


    def append(self, x):
        """append(Doubles self, std::vector< double >::value_type const & x)"""
        return _RMF_HDF5.Doubles_append(self, x)


    def empty(self):
        """empty(Doubles self) -> bool"""
        return _RMF_HDF5.Doubles_empty(self)


    def size(self):
        """size(Doubles self) -> std::vector< double >::size_type"""
        return _RMF_HDF5.Doubles_size(self)


    def swap(self, v):
        """swap(Doubles self, Doubles v)"""
        return _RMF_HDF5.Doubles_swap(self, v)


    def begin(self):
        """begin(Doubles self) -> std::vector< double >::iterator"""
        return _RMF_HDF5.Doubles_begin(self)


    def end(self):
        """end(Doubles self) -> std::vector< double >::iterator"""
        return _RMF_HDF5.Doubles_end(self)


    def rbegin(self):
        """rbegin(Doubles self) -> std::vector< double >::reverse_iterator"""
        return _RMF_HDF5.Doubles_rbegin(self)


    def rend(self):
        """rend(Doubles self) -> std::vector< double >::reverse_iterator"""
        return _RMF_HDF5.Doubles_rend(self)


    def clear(self):
        """clear(Doubles self)"""
        return _RMF_HDF5.Doubles_clear(self)


    def get_allocator(self):
        """get_allocator(Doubles self) -> std::vector< double >::allocator_type"""
        return _RMF_HDF5.Doubles_get_allocator(self)


    def pop_back(self):
        """pop_back(Doubles self)"""
        return _RMF_HDF5.Doubles_pop_back(self)


    def erase(self, *args):
        """
        erase(Doubles self, std::vector< double >::iterator pos) -> std::vector< double >::iterator
        erase(Doubles self, std::vector< double >::iterator first, std::vector< double >::iterator last) -> std::vector< double >::iterator
        """
        return _RMF_HDF5.Doubles_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(double)> self) -> Doubles
        __init__(std::vector<(double)> self, Doubles arg2) -> Doubles
        __init__(std::vector<(double)> self, std::vector< double >::size_type size) -> Doubles
        __init__(std::vector<(double)> self, std::vector< double >::size_type size, std::vector< double >::value_type const & value) -> Doubles
        """
        this = _RMF_HDF5.new_Doubles(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(Doubles self, std::vector< double >::value_type const & x)"""
        return _RMF_HDF5.Doubles_push_back(self, x)


    def front(self):
        """front(Doubles self) -> std::vector< double >::value_type const &"""
        return _RMF_HDF5.Doubles_front(self)


    def back(self):
        """back(Doubles self) -> std::vector< double >::value_type const &"""
        return _RMF_HDF5.Doubles_back(self)


    def assign(self, n, x):
        """assign(Doubles self, std::vector< double >::size_type n, std::vector< double >::value_type const & x)"""
        return _RMF_HDF5.Doubles_assign(self, n, x)


    def resize(self, *args):
        """
        resize(Doubles self, std::vector< double >::size_type new_size)
        resize(Doubles self, std::vector< double >::size_type new_size, std::vector< double >::value_type const & x)
        """
        return _RMF_HDF5.Doubles_resize(self, *args)


    def insert(self, *args):
        """
        insert(Doubles self, std::vector< double >::iterator pos, std::vector< double >::value_type const & x) -> std::vector< double >::iterator
        insert(Doubles self, std::vector< double >::iterator pos, std::vector< double >::size_type n, std::vector< double >::value_type const & x)
        """
        return _RMF_HDF5.Doubles_insert(self, *args)


    def reserve(self, n):
        """reserve(Doubles self, std::vector< double >::size_type n)"""
        return _RMF_HDF5.Doubles_reserve(self, n)


    def capacity(self):
        """capacity(Doubles self) -> std::vector< double >::size_type"""
        return _RMF_HDF5.Doubles_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_Doubles
    __del__ = lambda self: None
Doubles_swigregister = _RMF_HDF5.Doubles_swigregister
Doubles_swigregister(Doubles)

class IntsList(_object):
    """Proxy of C++ std::vector<(std::vector<(int)>)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntsList, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(IntsList self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.IntsList_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(IntsList self) -> bool"""
        return _RMF_HDF5.IntsList___nonzero__(self)


    def __bool__(self):
        """__bool__(IntsList self) -> bool"""
        return _RMF_HDF5.IntsList___bool__(self)


    def __len__(self):
        """__len__(IntsList self) -> std::vector< std::vector< int > >::size_type"""
        return _RMF_HDF5.IntsList___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(IntsList self, std::vector< std::vector< int > >::difference_type i, std::vector< std::vector< int > >::difference_type j) -> IntsList"""
        return _RMF_HDF5.IntsList___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(IntsList self, std::vector< std::vector< int > >::difference_type i, std::vector< std::vector< int > >::difference_type j)
        __setslice__(IntsList self, std::vector< std::vector< int > >::difference_type i, std::vector< std::vector< int > >::difference_type j, IntsList v)
        """
        return _RMF_HDF5.IntsList___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(IntsList self, std::vector< std::vector< int > >::difference_type i, std::vector< std::vector< int > >::difference_type j)"""
        return _RMF_HDF5.IntsList___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(IntsList self, std::vector< std::vector< int > >::difference_type i)
        __delitem__(IntsList self, PySliceObject * slice)
        """
        return _RMF_HDF5.IntsList___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(IntsList self, PySliceObject * slice) -> IntsList
        __getitem__(IntsList self, std::vector< std::vector< int > >::difference_type i) -> Ints
        """
        return _RMF_HDF5.IntsList___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(IntsList self, PySliceObject * slice, IntsList v)
        __setitem__(IntsList self, PySliceObject * slice)
        __setitem__(IntsList self, std::vector< std::vector< int > >::difference_type i, Ints x)
        """
        return _RMF_HDF5.IntsList___setitem__(self, *args)


    def pop(self):
        """pop(IntsList self) -> Ints"""
        return _RMF_HDF5.IntsList_pop(self)


    def append(self, x):
        """append(IntsList self, Ints x)"""
        return _RMF_HDF5.IntsList_append(self, x)


    def empty(self):
        """empty(IntsList self) -> bool"""
        return _RMF_HDF5.IntsList_empty(self)


    def size(self):
        """size(IntsList self) -> std::vector< std::vector< int > >::size_type"""
        return _RMF_HDF5.IntsList_size(self)


    def swap(self, v):
        """swap(IntsList self, IntsList v)"""
        return _RMF_HDF5.IntsList_swap(self, v)


    def begin(self):
        """begin(IntsList self) -> std::vector< std::vector< int > >::iterator"""
        return _RMF_HDF5.IntsList_begin(self)


    def end(self):
        """end(IntsList self) -> std::vector< std::vector< int > >::iterator"""
        return _RMF_HDF5.IntsList_end(self)


    def rbegin(self):
        """rbegin(IntsList self) -> std::vector< std::vector< int > >::reverse_iterator"""
        return _RMF_HDF5.IntsList_rbegin(self)


    def rend(self):
        """rend(IntsList self) -> std::vector< std::vector< int > >::reverse_iterator"""
        return _RMF_HDF5.IntsList_rend(self)


    def clear(self):
        """clear(IntsList self)"""
        return _RMF_HDF5.IntsList_clear(self)


    def get_allocator(self):
        """get_allocator(IntsList self) -> std::vector< std::vector< int > >::allocator_type"""
        return _RMF_HDF5.IntsList_get_allocator(self)


    def pop_back(self):
        """pop_back(IntsList self)"""
        return _RMF_HDF5.IntsList_pop_back(self)


    def erase(self, *args):
        """
        erase(IntsList self, std::vector< std::vector< int > >::iterator pos) -> std::vector< std::vector< int > >::iterator
        erase(IntsList self, std::vector< std::vector< int > >::iterator first, std::vector< std::vector< int > >::iterator last) -> std::vector< std::vector< int > >::iterator
        """
        return _RMF_HDF5.IntsList_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(std::vector<(int)>)> self) -> IntsList
        __init__(std::vector<(std::vector<(int)>)> self, IntsList arg2) -> IntsList
        __init__(std::vector<(std::vector<(int)>)> self, std::vector< std::vector< int > >::size_type size) -> IntsList
        __init__(std::vector<(std::vector<(int)>)> self, std::vector< std::vector< int > >::size_type size, Ints value) -> IntsList
        """
        this = _RMF_HDF5.new_IntsList(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(IntsList self, Ints x)"""
        return _RMF_HDF5.IntsList_push_back(self, x)


    def front(self):
        """front(IntsList self) -> Ints"""
        return _RMF_HDF5.IntsList_front(self)


    def back(self):
        """back(IntsList self) -> Ints"""
        return _RMF_HDF5.IntsList_back(self)


    def assign(self, n, x):
        """assign(IntsList self, std::vector< std::vector< int > >::size_type n, Ints x)"""
        return _RMF_HDF5.IntsList_assign(self, n, x)


    def resize(self, *args):
        """
        resize(IntsList self, std::vector< std::vector< int > >::size_type new_size)
        resize(IntsList self, std::vector< std::vector< int > >::size_type new_size, Ints x)
        """
        return _RMF_HDF5.IntsList_resize(self, *args)


    def insert(self, *args):
        """
        insert(IntsList self, std::vector< std::vector< int > >::iterator pos, Ints x) -> std::vector< std::vector< int > >::iterator
        insert(IntsList self, std::vector< std::vector< int > >::iterator pos, std::vector< std::vector< int > >::size_type n, Ints x)
        """
        return _RMF_HDF5.IntsList_insert(self, *args)


    def reserve(self, n):
        """reserve(IntsList self, std::vector< std::vector< int > >::size_type n)"""
        return _RMF_HDF5.IntsList_reserve(self, n)


    def capacity(self):
        """capacity(IntsList self) -> std::vector< std::vector< int > >::size_type"""
        return _RMF_HDF5.IntsList_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_IntsList
    __del__ = lambda self: None
IntsList_swigregister = _RMF_HDF5.IntsList_swigregister
IntsList_swigregister(IntsList)

class FloatsList(_object):
    """Proxy of C++ std::vector<(std::vector<(float)>)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsList, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(FloatsList self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.FloatsList_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(FloatsList self) -> bool"""
        return _RMF_HDF5.FloatsList___nonzero__(self)


    def __bool__(self):
        """__bool__(FloatsList self) -> bool"""
        return _RMF_HDF5.FloatsList___bool__(self)


    def __len__(self):
        """__len__(FloatsList self) -> std::vector< std::vector< float > >::size_type"""
        return _RMF_HDF5.FloatsList___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(FloatsList self, std::vector< std::vector< float > >::difference_type i, std::vector< std::vector< float > >::difference_type j) -> FloatsList"""
        return _RMF_HDF5.FloatsList___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(FloatsList self, std::vector< std::vector< float > >::difference_type i, std::vector< std::vector< float > >::difference_type j)
        __setslice__(FloatsList self, std::vector< std::vector< float > >::difference_type i, std::vector< std::vector< float > >::difference_type j, FloatsList v)
        """
        return _RMF_HDF5.FloatsList___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(FloatsList self, std::vector< std::vector< float > >::difference_type i, std::vector< std::vector< float > >::difference_type j)"""
        return _RMF_HDF5.FloatsList___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(FloatsList self, std::vector< std::vector< float > >::difference_type i)
        __delitem__(FloatsList self, PySliceObject * slice)
        """
        return _RMF_HDF5.FloatsList___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(FloatsList self, PySliceObject * slice) -> FloatsList
        __getitem__(FloatsList self, std::vector< std::vector< float > >::difference_type i) -> Floats
        """
        return _RMF_HDF5.FloatsList___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(FloatsList self, PySliceObject * slice, FloatsList v)
        __setitem__(FloatsList self, PySliceObject * slice)
        __setitem__(FloatsList self, std::vector< std::vector< float > >::difference_type i, Floats x)
        """
        return _RMF_HDF5.FloatsList___setitem__(self, *args)


    def pop(self):
        """pop(FloatsList self) -> Floats"""
        return _RMF_HDF5.FloatsList_pop(self)


    def append(self, x):
        """append(FloatsList self, Floats x)"""
        return _RMF_HDF5.FloatsList_append(self, x)


    def empty(self):
        """empty(FloatsList self) -> bool"""
        return _RMF_HDF5.FloatsList_empty(self)


    def size(self):
        """size(FloatsList self) -> std::vector< std::vector< float > >::size_type"""
        return _RMF_HDF5.FloatsList_size(self)


    def swap(self, v):
        """swap(FloatsList self, FloatsList v)"""
        return _RMF_HDF5.FloatsList_swap(self, v)


    def begin(self):
        """begin(FloatsList self) -> std::vector< std::vector< float > >::iterator"""
        return _RMF_HDF5.FloatsList_begin(self)


    def end(self):
        """end(FloatsList self) -> std::vector< std::vector< float > >::iterator"""
        return _RMF_HDF5.FloatsList_end(self)


    def rbegin(self):
        """rbegin(FloatsList self) -> std::vector< std::vector< float > >::reverse_iterator"""
        return _RMF_HDF5.FloatsList_rbegin(self)


    def rend(self):
        """rend(FloatsList self) -> std::vector< std::vector< float > >::reverse_iterator"""
        return _RMF_HDF5.FloatsList_rend(self)


    def clear(self):
        """clear(FloatsList self)"""
        return _RMF_HDF5.FloatsList_clear(self)


    def get_allocator(self):
        """get_allocator(FloatsList self) -> std::vector< std::vector< float > >::allocator_type"""
        return _RMF_HDF5.FloatsList_get_allocator(self)


    def pop_back(self):
        """pop_back(FloatsList self)"""
        return _RMF_HDF5.FloatsList_pop_back(self)


    def erase(self, *args):
        """
        erase(FloatsList self, std::vector< std::vector< float > >::iterator pos) -> std::vector< std::vector< float > >::iterator
        erase(FloatsList self, std::vector< std::vector< float > >::iterator first, std::vector< std::vector< float > >::iterator last) -> std::vector< std::vector< float > >::iterator
        """
        return _RMF_HDF5.FloatsList_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(std::vector<(float)>)> self) -> FloatsList
        __init__(std::vector<(std::vector<(float)>)> self, FloatsList arg2) -> FloatsList
        __init__(std::vector<(std::vector<(float)>)> self, std::vector< std::vector< float > >::size_type size) -> FloatsList
        __init__(std::vector<(std::vector<(float)>)> self, std::vector< std::vector< float > >::size_type size, Floats value) -> FloatsList
        """
        this = _RMF_HDF5.new_FloatsList(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(FloatsList self, Floats x)"""
        return _RMF_HDF5.FloatsList_push_back(self, x)


    def front(self):
        """front(FloatsList self) -> Floats"""
        return _RMF_HDF5.FloatsList_front(self)


    def back(self):
        """back(FloatsList self) -> Floats"""
        return _RMF_HDF5.FloatsList_back(self)


    def assign(self, n, x):
        """assign(FloatsList self, std::vector< std::vector< float > >::size_type n, Floats x)"""
        return _RMF_HDF5.FloatsList_assign(self, n, x)


    def resize(self, *args):
        """
        resize(FloatsList self, std::vector< std::vector< float > >::size_type new_size)
        resize(FloatsList self, std::vector< std::vector< float > >::size_type new_size, Floats x)
        """
        return _RMF_HDF5.FloatsList_resize(self, *args)


    def insert(self, *args):
        """
        insert(FloatsList self, std::vector< std::vector< float > >::iterator pos, Floats x) -> std::vector< std::vector< float > >::iterator
        insert(FloatsList self, std::vector< std::vector< float > >::iterator pos, std::vector< std::vector< float > >::size_type n, Floats x)
        """
        return _RMF_HDF5.FloatsList_insert(self, *args)


    def reserve(self, n):
        """reserve(FloatsList self, std::vector< std::vector< float > >::size_type n)"""
        return _RMF_HDF5.FloatsList_reserve(self, n)


    def capacity(self):
        """capacity(FloatsList self) -> std::vector< std::vector< float > >::size_type"""
        return _RMF_HDF5.FloatsList_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsList
    __del__ = lambda self: None
FloatsList_swigregister = _RMF_HDF5.FloatsList_swigregister
FloatsList_swigregister(FloatsList)

class StringsList(_object):
    """Proxy of C++ std::vector<(std::vector<(std::string)>)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StringsList, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(StringsList self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.StringsList_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(StringsList self) -> bool"""
        return _RMF_HDF5.StringsList___nonzero__(self)


    def __bool__(self):
        """__bool__(StringsList self) -> bool"""
        return _RMF_HDF5.StringsList___bool__(self)


    def __len__(self):
        """__len__(StringsList self) -> std::vector< std::vector< std::string > >::size_type"""
        return _RMF_HDF5.StringsList___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(StringsList self, std::vector< std::vector< std::string > >::difference_type i, std::vector< std::vector< std::string > >::difference_type j) -> StringsList"""
        return _RMF_HDF5.StringsList___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(StringsList self, std::vector< std::vector< std::string > >::difference_type i, std::vector< std::vector< std::string > >::difference_type j)
        __setslice__(StringsList self, std::vector< std::vector< std::string > >::difference_type i, std::vector< std::vector< std::string > >::difference_type j, StringsList v)
        """
        return _RMF_HDF5.StringsList___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(StringsList self, std::vector< std::vector< std::string > >::difference_type i, std::vector< std::vector< std::string > >::difference_type j)"""
        return _RMF_HDF5.StringsList___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(StringsList self, std::vector< std::vector< std::string > >::difference_type i)
        __delitem__(StringsList self, PySliceObject * slice)
        """
        return _RMF_HDF5.StringsList___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(StringsList self, PySliceObject * slice) -> StringsList
        __getitem__(StringsList self, std::vector< std::vector< std::string > >::difference_type i) -> Strings
        """
        return _RMF_HDF5.StringsList___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(StringsList self, PySliceObject * slice, StringsList v)
        __setitem__(StringsList self, PySliceObject * slice)
        __setitem__(StringsList self, std::vector< std::vector< std::string > >::difference_type i, Strings x)
        """
        return _RMF_HDF5.StringsList___setitem__(self, *args)


    def pop(self):
        """pop(StringsList self) -> Strings"""
        return _RMF_HDF5.StringsList_pop(self)


    def append(self, x):
        """append(StringsList self, Strings x)"""
        return _RMF_HDF5.StringsList_append(self, x)


    def empty(self):
        """empty(StringsList self) -> bool"""
        return _RMF_HDF5.StringsList_empty(self)


    def size(self):
        """size(StringsList self) -> std::vector< std::vector< std::string > >::size_type"""
        return _RMF_HDF5.StringsList_size(self)


    def swap(self, v):
        """swap(StringsList self, StringsList v)"""
        return _RMF_HDF5.StringsList_swap(self, v)


    def begin(self):
        """begin(StringsList self) -> std::vector< std::vector< std::string > >::iterator"""
        return _RMF_HDF5.StringsList_begin(self)


    def end(self):
        """end(StringsList self) -> std::vector< std::vector< std::string > >::iterator"""
        return _RMF_HDF5.StringsList_end(self)


    def rbegin(self):
        """rbegin(StringsList self) -> std::vector< std::vector< std::string > >::reverse_iterator"""
        return _RMF_HDF5.StringsList_rbegin(self)


    def rend(self):
        """rend(StringsList self) -> std::vector< std::vector< std::string > >::reverse_iterator"""
        return _RMF_HDF5.StringsList_rend(self)


    def clear(self):
        """clear(StringsList self)"""
        return _RMF_HDF5.StringsList_clear(self)


    def get_allocator(self):
        """get_allocator(StringsList self) -> std::vector< std::vector< std::string > >::allocator_type"""
        return _RMF_HDF5.StringsList_get_allocator(self)


    def pop_back(self):
        """pop_back(StringsList self)"""
        return _RMF_HDF5.StringsList_pop_back(self)


    def erase(self, *args):
        """
        erase(StringsList self, std::vector< std::vector< std::string > >::iterator pos) -> std::vector< std::vector< std::string > >::iterator
        erase(StringsList self, std::vector< std::vector< std::string > >::iterator first, std::vector< std::vector< std::string > >::iterator last) -> std::vector< std::vector< std::string > >::iterator
        """
        return _RMF_HDF5.StringsList_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(std::vector<(std::string)>)> self) -> StringsList
        __init__(std::vector<(std::vector<(std::string)>)> self, StringsList arg2) -> StringsList
        __init__(std::vector<(std::vector<(std::string)>)> self, std::vector< std::vector< std::string > >::size_type size) -> StringsList
        __init__(std::vector<(std::vector<(std::string)>)> self, std::vector< std::vector< std::string > >::size_type size, Strings value) -> StringsList
        """
        this = _RMF_HDF5.new_StringsList(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(StringsList self, Strings x)"""
        return _RMF_HDF5.StringsList_push_back(self, x)


    def front(self):
        """front(StringsList self) -> Strings"""
        return _RMF_HDF5.StringsList_front(self)


    def back(self):
        """back(StringsList self) -> Strings"""
        return _RMF_HDF5.StringsList_back(self)


    def assign(self, n, x):
        """assign(StringsList self, std::vector< std::vector< std::string > >::size_type n, Strings x)"""
        return _RMF_HDF5.StringsList_assign(self, n, x)


    def resize(self, *args):
        """
        resize(StringsList self, std::vector< std::vector< std::string > >::size_type new_size)
        resize(StringsList self, std::vector< std::vector< std::string > >::size_type new_size, Strings x)
        """
        return _RMF_HDF5.StringsList_resize(self, *args)


    def insert(self, *args):
        """
        insert(StringsList self, std::vector< std::vector< std::string > >::iterator pos, Strings x) -> std::vector< std::vector< std::string > >::iterator
        insert(StringsList self, std::vector< std::vector< std::string > >::iterator pos, std::vector< std::vector< std::string > >::size_type n, Strings x)
        """
        return _RMF_HDF5.StringsList_insert(self, *args)


    def reserve(self, n):
        """reserve(StringsList self, std::vector< std::vector< std::string > >::size_type n)"""
        return _RMF_HDF5.StringsList_reserve(self, n)


    def capacity(self):
        """capacity(StringsList self) -> std::vector< std::vector< std::string > >::size_type"""
        return _RMF_HDF5.StringsList_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_StringsList
    __del__ = lambda self: None
StringsList_swigregister = _RMF_HDF5.StringsList_swigregister
StringsList_swigregister(StringsList)

class DoublesList(_object):
    """Proxy of C++ std::vector<(std::vector<(double)>)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DoublesList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DoublesList, name)
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(DoublesList self) -> RMF_HDF5_SwigPyIterator"""
        return _RMF_HDF5.DoublesList_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(DoublesList self) -> bool"""
        return _RMF_HDF5.DoublesList___nonzero__(self)


    def __bool__(self):
        """__bool__(DoublesList self) -> bool"""
        return _RMF_HDF5.DoublesList___bool__(self)


    def __len__(self):
        """__len__(DoublesList self) -> std::vector< std::vector< double > >::size_type"""
        return _RMF_HDF5.DoublesList___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(DoublesList self, std::vector< std::vector< double > >::difference_type i, std::vector< std::vector< double > >::difference_type j) -> DoublesList"""
        return _RMF_HDF5.DoublesList___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(DoublesList self, std::vector< std::vector< double > >::difference_type i, std::vector< std::vector< double > >::difference_type j)
        __setslice__(DoublesList self, std::vector< std::vector< double > >::difference_type i, std::vector< std::vector< double > >::difference_type j, DoublesList v)
        """
        return _RMF_HDF5.DoublesList___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(DoublesList self, std::vector< std::vector< double > >::difference_type i, std::vector< std::vector< double > >::difference_type j)"""
        return _RMF_HDF5.DoublesList___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(DoublesList self, std::vector< std::vector< double > >::difference_type i)
        __delitem__(DoublesList self, PySliceObject * slice)
        """
        return _RMF_HDF5.DoublesList___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(DoublesList self, PySliceObject * slice) -> DoublesList
        __getitem__(DoublesList self, std::vector< std::vector< double > >::difference_type i) -> Doubles
        """
        return _RMF_HDF5.DoublesList___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(DoublesList self, PySliceObject * slice, DoublesList v)
        __setitem__(DoublesList self, PySliceObject * slice)
        __setitem__(DoublesList self, std::vector< std::vector< double > >::difference_type i, Doubles x)
        """
        return _RMF_HDF5.DoublesList___setitem__(self, *args)


    def pop(self):
        """pop(DoublesList self) -> Doubles"""
        return _RMF_HDF5.DoublesList_pop(self)


    def append(self, x):
        """append(DoublesList self, Doubles x)"""
        return _RMF_HDF5.DoublesList_append(self, x)


    def empty(self):
        """empty(DoublesList self) -> bool"""
        return _RMF_HDF5.DoublesList_empty(self)


    def size(self):
        """size(DoublesList self) -> std::vector< std::vector< double > >::size_type"""
        return _RMF_HDF5.DoublesList_size(self)


    def swap(self, v):
        """swap(DoublesList self, DoublesList v)"""
        return _RMF_HDF5.DoublesList_swap(self, v)


    def begin(self):
        """begin(DoublesList self) -> std::vector< std::vector< double > >::iterator"""
        return _RMF_HDF5.DoublesList_begin(self)


    def end(self):
        """end(DoublesList self) -> std::vector< std::vector< double > >::iterator"""
        return _RMF_HDF5.DoublesList_end(self)


    def rbegin(self):
        """rbegin(DoublesList self) -> std::vector< std::vector< double > >::reverse_iterator"""
        return _RMF_HDF5.DoublesList_rbegin(self)


    def rend(self):
        """rend(DoublesList self) -> std::vector< std::vector< double > >::reverse_iterator"""
        return _RMF_HDF5.DoublesList_rend(self)


    def clear(self):
        """clear(DoublesList self)"""
        return _RMF_HDF5.DoublesList_clear(self)


    def get_allocator(self):
        """get_allocator(DoublesList self) -> std::vector< std::vector< double > >::allocator_type"""
        return _RMF_HDF5.DoublesList_get_allocator(self)


    def pop_back(self):
        """pop_back(DoublesList self)"""
        return _RMF_HDF5.DoublesList_pop_back(self)


    def erase(self, *args):
        """
        erase(DoublesList self, std::vector< std::vector< double > >::iterator pos) -> std::vector< std::vector< double > >::iterator
        erase(DoublesList self, std::vector< std::vector< double > >::iterator first, std::vector< std::vector< double > >::iterator last) -> std::vector< std::vector< double > >::iterator
        """
        return _RMF_HDF5.DoublesList_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(std::vector<(double)>)> self) -> DoublesList
        __init__(std::vector<(std::vector<(double)>)> self, DoublesList arg2) -> DoublesList
        __init__(std::vector<(std::vector<(double)>)> self, std::vector< std::vector< double > >::size_type size) -> DoublesList
        __init__(std::vector<(std::vector<(double)>)> self, std::vector< std::vector< double > >::size_type size, Doubles value) -> DoublesList
        """
        this = _RMF_HDF5.new_DoublesList(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def push_back(self, x):
        """push_back(DoublesList self, Doubles x)"""
        return _RMF_HDF5.DoublesList_push_back(self, x)


    def front(self):
        """front(DoublesList self) -> Doubles"""
        return _RMF_HDF5.DoublesList_front(self)


    def back(self):
        """back(DoublesList self) -> Doubles"""
        return _RMF_HDF5.DoublesList_back(self)


    def assign(self, n, x):
        """assign(DoublesList self, std::vector< std::vector< double > >::size_type n, Doubles x)"""
        return _RMF_HDF5.DoublesList_assign(self, n, x)


    def resize(self, *args):
        """
        resize(DoublesList self, std::vector< std::vector< double > >::size_type new_size)
        resize(DoublesList self, std::vector< std::vector< double > >::size_type new_size, Doubles x)
        """
        return _RMF_HDF5.DoublesList_resize(self, *args)


    def insert(self, *args):
        """
        insert(DoublesList self, std::vector< std::vector< double > >::iterator pos, Doubles x) -> std::vector< std::vector< double > >::iterator
        insert(DoublesList self, std::vector< std::vector< double > >::iterator pos, std::vector< std::vector< double > >::size_type n, Doubles x)
        """
        return _RMF_HDF5.DoublesList_insert(self, *args)


    def reserve(self, n):
        """reserve(DoublesList self, std::vector< std::vector< double > >::size_type n)"""
        return _RMF_HDF5.DoublesList_reserve(self, n)


    def capacity(self):
        """capacity(DoublesList self) -> std::vector< std::vector< double > >::size_type"""
        return _RMF_HDF5.DoublesList_capacity(self)

    __swig_destroy__ = _RMF_HDF5.delete_DoublesList
    __del__ = lambda self: None
DoublesList_swigregister = _RMF_HDF5.DoublesList_swigregister
DoublesList_swigregister(DoublesList)


_types_list.append("int")


_types_list.append("ints")


_types_list.append("float")


_types_list.append("floats")


_types_list.append("index")


_types_list.append("indexes")


_types_list.append("string")


_types_list.append("strings")

class IntTraitsBase(_object):
    """Proxy of C++ RMF::HDF5::IntTraitsBase class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntTraitsBase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntTraitsBase, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5.IntTraitsBase_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5.IntTraitsBase_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
        return _RMF_HDF5.IntTraitsBase_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(RMF::HDF5::IntTraitsBase::Type t) -> bool"""
        return _RMF_HDF5.IntTraitsBase_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5.IntTraitsBase_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5.IntTraitsBase_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5.IntTraitsBase_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
        return _RMF_HDF5.IntTraitsBase_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5.IntTraitsBase_get_name()

    get_name = staticmethod(get_name)
    __swig_destroy__ = _RMF_HDF5.delete_IntTraitsBase
    __del__ = lambda self: None
IntTraitsBase_swigregister = _RMF_HDF5.IntTraitsBase_swigregister
IntTraitsBase_swigregister(IntTraitsBase)
cvar = _RMF_HDF5.cvar
NullInt = cvar.NullInt
NullInts = cvar.NullInts
NullFloat = cvar.NullFloat
NullFloats = cvar.NullFloats
NullIndex = cvar.NullIndex
NullIndexes = cvar.NullIndexes
NullString = cvar.NullString
NullStrings = cvar.NullStrings

def IntTraitsBase_get_index():
    """IntTraitsBase_get_index() -> int"""
    return _RMF_HDF5.IntTraitsBase_get_index()

def IntTraitsBase_get_null_value():
    """IntTraitsBase_get_null_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
    return _RMF_HDF5.IntTraitsBase_get_null_value()

def IntTraitsBase_get_is_null_value(t):
    """IntTraitsBase_get_is_null_value(RMF::HDF5::IntTraitsBase::Type t) -> bool"""
    return _RMF_HDF5.IntTraitsBase_get_is_null_value(t)

def IntTraitsBase_get_hdf5_fill_type():
    """IntTraitsBase_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5.IntTraitsBase_get_hdf5_fill_type()

def IntTraitsBase_get_hdf5_disk_type():
    """IntTraitsBase_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5.IntTraitsBase_get_hdf5_disk_type()

def IntTraitsBase_get_hdf5_memory_type():
    """IntTraitsBase_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5.IntTraitsBase_get_hdf5_memory_type()

def IntTraitsBase_get_fill_value():
    """IntTraitsBase_get_fill_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
    return _RMF_HDF5.IntTraitsBase_get_fill_value()

def IntTraitsBase_get_name():
    """IntTraitsBase_get_name() -> std::string"""
    return _RMF_HDF5.IntTraitsBase_get_name()

def _IntTraitsBase():
    """_IntTraitsBase() -> IntTraitsBase"""
    val = _RMF_HDF5.new__IntTraitsBase()
    return val

class FloatTraitsBase(_object):
    """Proxy of C++ RMF::HDF5::FloatTraitsBase class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatTraitsBase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FloatTraitsBase, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5.FloatTraitsBase_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5.FloatTraitsBase_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> RMF::HDF5::FloatTraitsBase::Type const &"""
        return _RMF_HDF5.FloatTraitsBase_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(RMF::HDF5::FloatTraitsBase::Type t) -> bool"""
        return _RMF_HDF5.FloatTraitsBase_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5.FloatTraitsBase_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5.FloatTraitsBase_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5.FloatTraitsBase_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> RMF::HDF5::FloatTraitsBase::Type const &"""
        return _RMF_HDF5.FloatTraitsBase_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5.FloatTraitsBase_get_name()

    get_name = staticmethod(get_name)
    __swig_destroy__ = _RMF_HDF5.delete_FloatTraitsBase
    __del__ = lambda self: None
FloatTraitsBase_swigregister = _RMF_HDF5.FloatTraitsBase_swigregister
FloatTraitsBase_swigregister(FloatTraitsBase)

def FloatTraitsBase_get_index():
    """FloatTraitsBase_get_index() -> int"""
    return _RMF_HDF5.FloatTraitsBase_get_index()

def FloatTraitsBase_get_null_value():
    """FloatTraitsBase_get_null_value() -> RMF::HDF5::FloatTraitsBase::Type const &"""
    return _RMF_HDF5.FloatTraitsBase_get_null_value()

def FloatTraitsBase_get_is_null_value(t):
    """FloatTraitsBase_get_is_null_value(RMF::HDF5::FloatTraitsBase::Type t) -> bool"""
    return _RMF_HDF5.FloatTraitsBase_get_is_null_value(t)

def FloatTraitsBase_get_hdf5_fill_type():
    """FloatTraitsBase_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5.FloatTraitsBase_get_hdf5_fill_type()

def FloatTraitsBase_get_hdf5_disk_type():
    """FloatTraitsBase_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5.FloatTraitsBase_get_hdf5_disk_type()

def FloatTraitsBase_get_hdf5_memory_type():
    """FloatTraitsBase_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5.FloatTraitsBase_get_hdf5_memory_type()

def FloatTraitsBase_get_fill_value():
    """FloatTraitsBase_get_fill_value() -> RMF::HDF5::FloatTraitsBase::Type const &"""
    return _RMF_HDF5.FloatTraitsBase_get_fill_value()

def FloatTraitsBase_get_name():
    """FloatTraitsBase_get_name() -> std::string"""
    return _RMF_HDF5.FloatTraitsBase_get_name()

def _FloatTraitsBase():
    """_FloatTraitsBase() -> FloatTraitsBase"""
    val = _RMF_HDF5.new__FloatTraitsBase()
    return val

class IndexTraitsBase(IntTraitsBase):
    """Proxy of C++ RMF::HDF5::IndexTraitsBase class."""

    __swig_setmethods__ = {}
    for _s in [IntTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexTraitsBase, name, value)
    __swig_getmethods__ = {}
    for _s in [IntTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexTraitsBase, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5.IndexTraitsBase_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
        return _RMF_HDF5.IndexTraitsBase_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(RMF::HDF5::IntTraitsBase::Type t) -> bool"""
        return _RMF_HDF5.IndexTraitsBase_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_fill_value():
        """get_fill_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
        return _RMF_HDF5.IndexTraitsBase_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5.IndexTraitsBase_get_name()

    get_name = staticmethod(get_name)
    __swig_destroy__ = _RMF_HDF5.delete_IndexTraitsBase
    __del__ = lambda self: None
IndexTraitsBase_swigregister = _RMF_HDF5.IndexTraitsBase_swigregister
IndexTraitsBase_swigregister(IndexTraitsBase)

def IndexTraitsBase_get_index():
    """IndexTraitsBase_get_index() -> int"""
    return _RMF_HDF5.IndexTraitsBase_get_index()

def IndexTraitsBase_get_null_value():
    """IndexTraitsBase_get_null_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
    return _RMF_HDF5.IndexTraitsBase_get_null_value()

def IndexTraitsBase_get_is_null_value(t):
    """IndexTraitsBase_get_is_null_value(RMF::HDF5::IntTraitsBase::Type t) -> bool"""
    return _RMF_HDF5.IndexTraitsBase_get_is_null_value(t)

def IndexTraitsBase_get_fill_value():
    """IndexTraitsBase_get_fill_value() -> RMF::HDF5::IntTraitsBase::Type const &"""
    return _RMF_HDF5.IndexTraitsBase_get_fill_value()

def IndexTraitsBase_get_name():
    """IndexTraitsBase_get_name() -> std::string"""
    return _RMF_HDF5.IndexTraitsBase_get_name()

def _IndexTraitsBase():
    """_IndexTraitsBase() -> IndexTraitsBase"""
    val = _RMF_HDF5.new__IndexTraitsBase()
    return val

class _CharTraits(_object):
    """Proxy of C++ RMF::HDF5::CharTraits class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _CharTraits, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _CharTraits, name)
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5._CharTraits_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5._CharTraits_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> RMF::HDF5::CharTraits::Type const &"""
        return _RMF_HDF5._CharTraits_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(RMF::HDF5::CharTraits::Type t) -> bool"""
        return _RMF_HDF5._CharTraits_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5._CharTraits_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5._CharTraits_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5._CharTraits_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> RMF::HDF5::CharTraits::Type const &"""
        return _RMF_HDF5._CharTraits_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5._CharTraits_get_name()

    get_name = staticmethod(get_name)

    def write_value_dataset(arg1, arg2, arg3, arg4):
        """write_value_dataset(hid_t arg1, hid_t arg2, hid_t arg3, char arg4)"""
        return _RMF_HDF5._CharTraits_write_value_dataset(arg1, arg2, arg3, arg4)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(arg1, arg2, arg3):
        """read_value_dataset(hid_t arg1, hid_t arg2, hid_t arg3) -> char"""
        return _RMF_HDF5._CharTraits_read_value_dataset(arg1, arg2, arg3)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(arg1, arg2, arg3, arg4):
        """write_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, RMF::HDF5::CharTraits::Types const & arg4)"""
        return _RMF_HDF5._CharTraits_write_values_dataset(arg1, arg2, arg3, arg4)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(arg1, arg2, arg3, arg4):
        """read_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, unsigned int arg4) -> RMF::HDF5::CharTraits::Types"""
        return _RMF_HDF5._CharTraits_read_values_dataset(arg1, arg2, arg3, arg4)

    read_values_dataset = staticmethod(read_values_dataset)

    def write_values_attribute(a, v):
        """write_values_attribute(hid_t a, RMF::HDF5::CharTraits::Types const & v)"""
        return _RMF_HDF5._CharTraits_write_values_attribute(a, v)

    write_values_attribute = staticmethod(write_values_attribute)

    def read_values_attribute(a, sz):
        """read_values_attribute(hid_t a, unsigned int sz) -> RMF::HDF5::CharTraits::Types"""
        return _RMF_HDF5._CharTraits_read_values_attribute(a, sz)

    read_values_attribute = staticmethod(read_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::CharTraits self) -> _CharTraits"""
        this = _RMF_HDF5.new__CharTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__CharTraits
    __del__ = lambda self: None
_CharTraits_swigregister = _RMF_HDF5._CharTraits_swigregister
_CharTraits_swigregister(_CharTraits)

def _CharTraits_get_index():
    """_CharTraits_get_index() -> int"""
    return _RMF_HDF5._CharTraits_get_index()

def _CharTraits_get_null_value():
    """_CharTraits_get_null_value() -> RMF::HDF5::CharTraits::Type const &"""
    return _RMF_HDF5._CharTraits_get_null_value()

def _CharTraits_get_is_null_value(t):
    """_CharTraits_get_is_null_value(RMF::HDF5::CharTraits::Type t) -> bool"""
    return _RMF_HDF5._CharTraits_get_is_null_value(t)

def _CharTraits_get_hdf5_fill_type():
    """_CharTraits_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5._CharTraits_get_hdf5_fill_type()

def _CharTraits_get_hdf5_disk_type():
    """_CharTraits_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5._CharTraits_get_hdf5_disk_type()

def _CharTraits_get_hdf5_memory_type():
    """_CharTraits_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5._CharTraits_get_hdf5_memory_type()

def _CharTraits_get_fill_value():
    """_CharTraits_get_fill_value() -> RMF::HDF5::CharTraits::Type const &"""
    return _RMF_HDF5._CharTraits_get_fill_value()

def _CharTraits_get_name():
    """_CharTraits_get_name() -> std::string"""
    return _RMF_HDF5._CharTraits_get_name()

def _CharTraits_write_value_dataset(arg2, arg3, arg4, arg5):
    """_CharTraits_write_value_dataset(hid_t arg2, hid_t arg3, hid_t arg4, char arg5)"""
    return _RMF_HDF5._CharTraits_write_value_dataset(arg2, arg3, arg4, arg5)

def _CharTraits_read_value_dataset(arg2, arg3, arg4):
    """_CharTraits_read_value_dataset(hid_t arg2, hid_t arg3, hid_t arg4) -> char"""
    return _RMF_HDF5._CharTraits_read_value_dataset(arg2, arg3, arg4)

def _CharTraits_write_values_dataset(arg2, arg3, arg4, arg5):
    """_CharTraits_write_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, RMF::HDF5::CharTraits::Types const & arg5)"""
    return _RMF_HDF5._CharTraits_write_values_dataset(arg2, arg3, arg4, arg5)

def _CharTraits_read_values_dataset(arg2, arg3, arg4, arg5):
    """_CharTraits_read_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, unsigned int arg5) -> RMF::HDF5::CharTraits::Types"""
    return _RMF_HDF5._CharTraits_read_values_dataset(arg2, arg3, arg4, arg5)

def _CharTraits_write_values_attribute(a, v):
    """_CharTraits_write_values_attribute(hid_t a, RMF::HDF5::CharTraits::Types const & v)"""
    return _RMF_HDF5._CharTraits_write_values_attribute(a, v)

def _CharTraits_read_values_attribute(a, sz):
    """_CharTraits_read_values_attribute(hid_t a, unsigned int sz) -> RMF::HDF5::CharTraits::Types"""
    return _RMF_HDF5._CharTraits_read_values_attribute(a, sz)

class _StringTraits(_object):
    """Proxy of C++ RMF::HDF5::StringTraits class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _StringTraits, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _StringTraits, name)
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5._StringTraits_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5._StringTraits_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> RMF::HDF5::StringTraits::Type const &"""
        return _RMF_HDF5._StringTraits_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(RMF::HDF5::StringTraits::Type t) -> bool"""
        return _RMF_HDF5._StringTraits_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5._StringTraits_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5._StringTraits_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5._StringTraits_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> RMF::HDF5::StringTraits::Type const &"""
        return _RMF_HDF5._StringTraits_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5._StringTraits_get_name()

    get_name = staticmethod(get_name)

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::StringTraits::Type const & v)"""
        return _RMF_HDF5._StringTraits_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::StringTraits::Type"""
        return _RMF_HDF5._StringTraits_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(arg1, arg2, arg3, arg4):
        """write_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, Strings arg4)"""
        return _RMF_HDF5._StringTraits_write_values_dataset(arg1, arg2, arg3, arg4)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(arg1, arg2, arg3, arg4):
        """read_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, unsigned int arg4) -> Strings"""
        return _RMF_HDF5._StringTraits_read_values_dataset(arg1, arg2, arg3, arg4)

    read_values_dataset = staticmethod(read_values_dataset)

    def read_values_attribute(arg1, arg2):
        """read_values_attribute(hid_t arg1, unsigned int arg2) -> Strings"""
        return _RMF_HDF5._StringTraits_read_values_attribute(arg1, arg2)

    read_values_attribute = staticmethod(read_values_attribute)

    def write_values_attribute(arg1, arg2):
        """write_values_attribute(hid_t arg1, Strings arg2)"""
        return _RMF_HDF5._StringTraits_write_values_attribute(arg1, arg2)

    write_values_attribute = staticmethod(write_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::StringTraits self) -> _StringTraits"""
        this = _RMF_HDF5.new__StringTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__StringTraits
    __del__ = lambda self: None
_StringTraits_swigregister = _RMF_HDF5._StringTraits_swigregister
_StringTraits_swigregister(_StringTraits)

def _StringTraits_get_index():
    """_StringTraits_get_index() -> int"""
    return _RMF_HDF5._StringTraits_get_index()

def _StringTraits_get_null_value():
    """_StringTraits_get_null_value() -> RMF::HDF5::StringTraits::Type const &"""
    return _RMF_HDF5._StringTraits_get_null_value()

def _StringTraits_get_is_null_value(t):
    """_StringTraits_get_is_null_value(RMF::HDF5::StringTraits::Type t) -> bool"""
    return _RMF_HDF5._StringTraits_get_is_null_value(t)

def _StringTraits_get_hdf5_fill_type():
    """_StringTraits_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5._StringTraits_get_hdf5_fill_type()

def _StringTraits_get_hdf5_disk_type():
    """_StringTraits_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5._StringTraits_get_hdf5_disk_type()

def _StringTraits_get_hdf5_memory_type():
    """_StringTraits_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5._StringTraits_get_hdf5_memory_type()

def _StringTraits_get_fill_value():
    """_StringTraits_get_fill_value() -> RMF::HDF5::StringTraits::Type const &"""
    return _RMF_HDF5._StringTraits_get_fill_value()

def _StringTraits_get_name():
    """_StringTraits_get_name() -> std::string"""
    return _RMF_HDF5._StringTraits_get_name()

def _StringTraits_write_value_dataset(d, iss, s, v):
    """_StringTraits_write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::StringTraits::Type const & v)"""
    return _RMF_HDF5._StringTraits_write_value_dataset(d, iss, s, v)

def _StringTraits_read_value_dataset(d, iss, sp):
    """_StringTraits_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::StringTraits::Type"""
    return _RMF_HDF5._StringTraits_read_value_dataset(d, iss, sp)

def _StringTraits_write_values_dataset(arg2, arg3, arg4, arg5):
    """_StringTraits_write_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, Strings arg5)"""
    return _RMF_HDF5._StringTraits_write_values_dataset(arg2, arg3, arg4, arg5)

def _StringTraits_read_values_dataset(arg2, arg3, arg4, arg5):
    """_StringTraits_read_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, unsigned int arg5) -> Strings"""
    return _RMF_HDF5._StringTraits_read_values_dataset(arg2, arg3, arg4, arg5)

def _StringTraits_read_values_attribute(arg2, arg3):
    """_StringTraits_read_values_attribute(hid_t arg2, unsigned int arg3) -> Strings"""
    return _RMF_HDF5._StringTraits_read_values_attribute(arg2, arg3)

def _StringTraits_write_values_attribute(arg2, arg3):
    """_StringTraits_write_values_attribute(hid_t arg2, Strings arg3)"""
    return _RMF_HDF5._StringTraits_write_values_attribute(arg2, arg3)

class _StringsTraits(_object):
    """Proxy of C++ RMF::HDF5::StringsTraits class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _StringsTraits, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _StringsTraits, name)
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5._StringsTraits_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5._StringsTraits_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> Strings"""
        return _RMF_HDF5._StringsTraits_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(Strings t) -> bool"""
        return _RMF_HDF5._StringsTraits_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5._StringsTraits_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5._StringsTraits_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5._StringsTraits_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> hvl_t const &"""
        return _RMF_HDF5._StringsTraits_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5._StringsTraits_get_name()

    get_name = staticmethod(get_name)

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, Strings v)"""
        return _RMF_HDF5._StringsTraits_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Strings"""
        return _RMF_HDF5._StringsTraits_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(arg1, arg2, arg3, arg4):
        """write_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, StringsList arg4)"""
        return _RMF_HDF5._StringsTraits_write_values_dataset(arg1, arg2, arg3, arg4)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(arg1, arg2, arg3, arg4):
        """read_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, unsigned int arg4) -> StringsList"""
        return _RMF_HDF5._StringsTraits_read_values_dataset(arg1, arg2, arg3, arg4)

    read_values_dataset = staticmethod(read_values_dataset)

    def read_values_attribute(arg1, arg2):
        """read_values_attribute(hid_t arg1, unsigned int arg2) -> StringsList"""
        return _RMF_HDF5._StringsTraits_read_values_attribute(arg1, arg2)

    read_values_attribute = staticmethod(read_values_attribute)

    def write_values_attribute(arg1, arg2):
        """write_values_attribute(hid_t arg1, StringsList arg2)"""
        return _RMF_HDF5._StringsTraits_write_values_attribute(arg1, arg2)

    write_values_attribute = staticmethod(write_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::StringsTraits self) -> _StringsTraits"""
        this = _RMF_HDF5.new__StringsTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__StringsTraits
    __del__ = lambda self: None
_StringsTraits_swigregister = _RMF_HDF5._StringsTraits_swigregister
_StringsTraits_swigregister(_StringsTraits)

def _StringsTraits_get_index():
    """_StringsTraits_get_index() -> int"""
    return _RMF_HDF5._StringsTraits_get_index()

def _StringsTraits_get_null_value():
    """_StringsTraits_get_null_value() -> Strings"""
    return _RMF_HDF5._StringsTraits_get_null_value()

def _StringsTraits_get_is_null_value(t):
    """_StringsTraits_get_is_null_value(Strings t) -> bool"""
    return _RMF_HDF5._StringsTraits_get_is_null_value(t)

def _StringsTraits_get_hdf5_fill_type():
    """_StringsTraits_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5._StringsTraits_get_hdf5_fill_type()

def _StringsTraits_get_hdf5_disk_type():
    """_StringsTraits_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5._StringsTraits_get_hdf5_disk_type()

def _StringsTraits_get_hdf5_memory_type():
    """_StringsTraits_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5._StringsTraits_get_hdf5_memory_type()

def _StringsTraits_get_fill_value():
    """_StringsTraits_get_fill_value() -> hvl_t const &"""
    return _RMF_HDF5._StringsTraits_get_fill_value()

def _StringsTraits_get_name():
    """_StringsTraits_get_name() -> std::string"""
    return _RMF_HDF5._StringsTraits_get_name()

def _StringsTraits_write_value_dataset(d, iss, s, v):
    """_StringsTraits_write_value_dataset(hid_t d, hid_t iss, hid_t s, Strings v)"""
    return _RMF_HDF5._StringsTraits_write_value_dataset(d, iss, s, v)

def _StringsTraits_read_value_dataset(d, iss, sp):
    """_StringsTraits_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Strings"""
    return _RMF_HDF5._StringsTraits_read_value_dataset(d, iss, sp)

def _StringsTraits_write_values_dataset(arg2, arg3, arg4, arg5):
    """_StringsTraits_write_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, StringsList arg5)"""
    return _RMF_HDF5._StringsTraits_write_values_dataset(arg2, arg3, arg4, arg5)

def _StringsTraits_read_values_dataset(arg2, arg3, arg4, arg5):
    """_StringsTraits_read_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, unsigned int arg5) -> StringsList"""
    return _RMF_HDF5._StringsTraits_read_values_dataset(arg2, arg3, arg4, arg5)

def _StringsTraits_read_values_attribute(arg2, arg3):
    """_StringsTraits_read_values_attribute(hid_t arg2, unsigned int arg3) -> StringsList"""
    return _RMF_HDF5._StringsTraits_read_values_attribute(arg2, arg3)

def _StringsTraits_write_values_attribute(arg2, arg3):
    """_StringsTraits_write_values_attribute(hid_t arg2, StringsList arg3)"""
    return _RMF_HDF5._StringsTraits_write_values_attribute(arg2, arg3)

class _IntTraitsBaseClass(IntTraitsBase):
    """Proxy of C++ RMF::HDF5::SimpleTraits<(RMF::HDF5::IntTraitsBase)> class."""

    __swig_setmethods__ = {}
    for _s in [IntTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IntTraitsBaseClass, name, value)
    __swig_getmethods__ = {}
    for _s in [IntTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _IntTraitsBaseClass, name)
    __repr__ = _swig_repr

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::IntTraitsBase::Type v)"""
        return _RMF_HDF5._IntTraitsBaseClass_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::IntTraitsBase::Type"""
        return _RMF_HDF5._IntTraitsBaseClass_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(d, iss, s, v):
        """write_values_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
        return _RMF_HDF5._IntTraitsBaseClass_write_values_dataset(d, iss, s, v)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(d, iss, sp, sz):
        """read_values_dataset(hid_t d, hid_t iss, hid_t sp, unsigned int sz) -> Ints"""
        return _RMF_HDF5._IntTraitsBaseClass_read_values_dataset(d, iss, sp, sz)

    read_values_dataset = staticmethod(read_values_dataset)

    def write_values_attribute(a, v):
        """write_values_attribute(hid_t a, Ints v)"""
        return _RMF_HDF5._IntTraitsBaseClass_write_values_attribute(a, v)

    write_values_attribute = staticmethod(write_values_attribute)

    def read_values_attribute(a, sz):
        """read_values_attribute(hid_t a, unsigned int sz) -> Ints"""
        return _RMF_HDF5._IntTraitsBaseClass_read_values_attribute(a, sz)

    read_values_attribute = staticmethod(read_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::SimpleTraits<(RMF::HDF5::IntTraitsBase)> self) -> _IntTraitsBaseClass"""
        this = _RMF_HDF5.new__IntTraitsBaseClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IntTraitsBaseClass
    __del__ = lambda self: None
_IntTraitsBaseClass_swigregister = _RMF_HDF5._IntTraitsBaseClass_swigregister
_IntTraitsBaseClass_swigregister(_IntTraitsBaseClass)

def _IntTraitsBaseClass_write_value_dataset(d, iss, s, v):
    """_IntTraitsBaseClass_write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::IntTraitsBase::Type v)"""
    return _RMF_HDF5._IntTraitsBaseClass_write_value_dataset(d, iss, s, v)

def _IntTraitsBaseClass_read_value_dataset(d, iss, sp):
    """_IntTraitsBaseClass_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::IntTraitsBase::Type"""
    return _RMF_HDF5._IntTraitsBaseClass_read_value_dataset(d, iss, sp)

def _IntTraitsBaseClass_write_values_dataset(d, iss, s, v):
    """_IntTraitsBaseClass_write_values_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
    return _RMF_HDF5._IntTraitsBaseClass_write_values_dataset(d, iss, s, v)

def _IntTraitsBaseClass_read_values_dataset(d, iss, sp, sz):
    """_IntTraitsBaseClass_read_values_dataset(hid_t d, hid_t iss, hid_t sp, unsigned int sz) -> Ints"""
    return _RMF_HDF5._IntTraitsBaseClass_read_values_dataset(d, iss, sp, sz)

def _IntTraitsBaseClass_write_values_attribute(a, v):
    """_IntTraitsBaseClass_write_values_attribute(hid_t a, Ints v)"""
    return _RMF_HDF5._IntTraitsBaseClass_write_values_attribute(a, v)

def _IntTraitsBaseClass_read_values_attribute(a, sz):
    """_IntTraitsBaseClass_read_values_attribute(hid_t a, unsigned int sz) -> Ints"""
    return _RMF_HDF5._IntTraitsBaseClass_read_values_attribute(a, sz)

class _IntsTraitsBase(_object):
    """Proxy of C++ RMF::HDF5::SimplePluralTraits<(RMF::HDF5::IntTraits)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IntsTraitsBase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _IntsTraitsBase, name)
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5._IntsTraitsBase_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5._IntsTraitsBase_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> Ints"""
        return _RMF_HDF5._IntsTraitsBase_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(Ints t) -> bool"""
        return _RMF_HDF5._IntsTraitsBase_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5._IntsTraitsBase_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5._IntsTraitsBase_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5._IntsTraitsBase_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> Ints"""
        return _RMF_HDF5._IntsTraitsBase_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5._IntsTraitsBase_get_name()

    get_name = staticmethod(get_name)

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
        return _RMF_HDF5._IntsTraitsBase_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Ints"""
        return _RMF_HDF5._IntsTraitsBase_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(arg1, arg2, arg3, arg4):
        """write_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, IntsList arg4)"""
        return _RMF_HDF5._IntsTraitsBase_write_values_dataset(arg1, arg2, arg3, arg4)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(arg1, arg2, arg3, arg4):
        """read_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, unsigned int arg4) -> IntsList"""
        return _RMF_HDF5._IntsTraitsBase_read_values_dataset(arg1, arg2, arg3, arg4)

    read_values_dataset = staticmethod(read_values_dataset)

    def read_values_attribute(arg1, arg2):
        """read_values_attribute(hid_t arg1, unsigned int arg2) -> IntsList"""
        return _RMF_HDF5._IntsTraitsBase_read_values_attribute(arg1, arg2)

    read_values_attribute = staticmethod(read_values_attribute)

    def write_values_attribute(arg1, arg2):
        """write_values_attribute(hid_t arg1, IntsList arg2)"""
        return _RMF_HDF5._IntsTraitsBase_write_values_attribute(arg1, arg2)

    write_values_attribute = staticmethod(write_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::SimplePluralTraits<(RMF::HDF5::IntTraits)> self) -> _IntsTraitsBase"""
        this = _RMF_HDF5.new__IntsTraitsBase()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IntsTraitsBase
    __del__ = lambda self: None
_IntsTraitsBase_swigregister = _RMF_HDF5._IntsTraitsBase_swigregister
_IntsTraitsBase_swigregister(_IntsTraitsBase)

def _IntsTraitsBase_get_index():
    """_IntsTraitsBase_get_index() -> int"""
    return _RMF_HDF5._IntsTraitsBase_get_index()

def _IntsTraitsBase_get_null_value():
    """_IntsTraitsBase_get_null_value() -> Ints"""
    return _RMF_HDF5._IntsTraitsBase_get_null_value()

def _IntsTraitsBase_get_is_null_value(t):
    """_IntsTraitsBase_get_is_null_value(Ints t) -> bool"""
    return _RMF_HDF5._IntsTraitsBase_get_is_null_value(t)

def _IntsTraitsBase_get_hdf5_fill_type():
    """_IntsTraitsBase_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5._IntsTraitsBase_get_hdf5_fill_type()

def _IntsTraitsBase_get_hdf5_disk_type():
    """_IntsTraitsBase_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5._IntsTraitsBase_get_hdf5_disk_type()

def _IntsTraitsBase_get_hdf5_memory_type():
    """_IntsTraitsBase_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5._IntsTraitsBase_get_hdf5_memory_type()

def _IntsTraitsBase_get_fill_value():
    """_IntsTraitsBase_get_fill_value() -> Ints"""
    return _RMF_HDF5._IntsTraitsBase_get_fill_value()

def _IntsTraitsBase_get_name():
    """_IntsTraitsBase_get_name() -> std::string"""
    return _RMF_HDF5._IntsTraitsBase_get_name()

def _IntsTraitsBase_write_value_dataset(d, iss, s, v):
    """_IntsTraitsBase_write_value_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
    return _RMF_HDF5._IntsTraitsBase_write_value_dataset(d, iss, s, v)

def _IntsTraitsBase_read_value_dataset(d, iss, sp):
    """_IntsTraitsBase_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Ints"""
    return _RMF_HDF5._IntsTraitsBase_read_value_dataset(d, iss, sp)

def _IntsTraitsBase_write_values_dataset(arg2, arg3, arg4, arg5):
    """_IntsTraitsBase_write_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, IntsList arg5)"""
    return _RMF_HDF5._IntsTraitsBase_write_values_dataset(arg2, arg3, arg4, arg5)

def _IntsTraitsBase_read_values_dataset(arg2, arg3, arg4, arg5):
    """_IntsTraitsBase_read_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, unsigned int arg5) -> IntsList"""
    return _RMF_HDF5._IntsTraitsBase_read_values_dataset(arg2, arg3, arg4, arg5)

def _IntsTraitsBase_read_values_attribute(arg2, arg3):
    """_IntsTraitsBase_read_values_attribute(hid_t arg2, unsigned int arg3) -> IntsList"""
    return _RMF_HDF5._IntsTraitsBase_read_values_attribute(arg2, arg3)

def _IntsTraitsBase_write_values_attribute(arg2, arg3):
    """_IntsTraitsBase_write_values_attribute(hid_t arg2, IntsList arg3)"""
    return _RMF_HDF5._IntsTraitsBase_write_values_attribute(arg2, arg3)

class _FloatTraitsBaseClass(FloatTraitsBase):
    """Proxy of C++ RMF::HDF5::SimpleTraits<(RMF::HDF5::FloatTraitsBase)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _FloatTraitsBaseClass, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _FloatTraitsBaseClass, name)
    __repr__ = _swig_repr

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::FloatTraitsBase::Type v)"""
        return _RMF_HDF5._FloatTraitsBaseClass_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::FloatTraitsBase::Type"""
        return _RMF_HDF5._FloatTraitsBaseClass_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(d, iss, s, v):
        """write_values_dataset(hid_t d, hid_t iss, hid_t s, Floats v)"""
        return _RMF_HDF5._FloatTraitsBaseClass_write_values_dataset(d, iss, s, v)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(d, iss, sp, sz):
        """read_values_dataset(hid_t d, hid_t iss, hid_t sp, unsigned int sz) -> Floats"""
        return _RMF_HDF5._FloatTraitsBaseClass_read_values_dataset(d, iss, sp, sz)

    read_values_dataset = staticmethod(read_values_dataset)

    def write_values_attribute(a, v):
        """write_values_attribute(hid_t a, Floats v)"""
        return _RMF_HDF5._FloatTraitsBaseClass_write_values_attribute(a, v)

    write_values_attribute = staticmethod(write_values_attribute)

    def read_values_attribute(a, sz):
        """read_values_attribute(hid_t a, unsigned int sz) -> Floats"""
        return _RMF_HDF5._FloatTraitsBaseClass_read_values_attribute(a, sz)

    read_values_attribute = staticmethod(read_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::SimpleTraits<(RMF::HDF5::FloatTraitsBase)> self) -> _FloatTraitsBaseClass"""
        this = _RMF_HDF5.new__FloatTraitsBaseClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__FloatTraitsBaseClass
    __del__ = lambda self: None
_FloatTraitsBaseClass_swigregister = _RMF_HDF5._FloatTraitsBaseClass_swigregister
_FloatTraitsBaseClass_swigregister(_FloatTraitsBaseClass)

def _FloatTraitsBaseClass_write_value_dataset(d, iss, s, v):
    """_FloatTraitsBaseClass_write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::FloatTraitsBase::Type v)"""
    return _RMF_HDF5._FloatTraitsBaseClass_write_value_dataset(d, iss, s, v)

def _FloatTraitsBaseClass_read_value_dataset(d, iss, sp):
    """_FloatTraitsBaseClass_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::FloatTraitsBase::Type"""
    return _RMF_HDF5._FloatTraitsBaseClass_read_value_dataset(d, iss, sp)

def _FloatTraitsBaseClass_write_values_dataset(d, iss, s, v):
    """_FloatTraitsBaseClass_write_values_dataset(hid_t d, hid_t iss, hid_t s, Floats v)"""
    return _RMF_HDF5._FloatTraitsBaseClass_write_values_dataset(d, iss, s, v)

def _FloatTraitsBaseClass_read_values_dataset(d, iss, sp, sz):
    """_FloatTraitsBaseClass_read_values_dataset(hid_t d, hid_t iss, hid_t sp, unsigned int sz) -> Floats"""
    return _RMF_HDF5._FloatTraitsBaseClass_read_values_dataset(d, iss, sp, sz)

def _FloatTraitsBaseClass_write_values_attribute(a, v):
    """_FloatTraitsBaseClass_write_values_attribute(hid_t a, Floats v)"""
    return _RMF_HDF5._FloatTraitsBaseClass_write_values_attribute(a, v)

def _FloatTraitsBaseClass_read_values_attribute(a, sz):
    """_FloatTraitsBaseClass_read_values_attribute(hid_t a, unsigned int sz) -> Floats"""
    return _RMF_HDF5._FloatTraitsBaseClass_read_values_attribute(a, sz)

class _FloatsTraitsBase(_object):
    """Proxy of C++ RMF::HDF5::SimplePluralTraits<(RMF::HDF5::FloatTraits)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _FloatsTraitsBase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _FloatsTraitsBase, name)
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5._FloatsTraitsBase_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5._FloatsTraitsBase_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> Floats"""
        return _RMF_HDF5._FloatsTraitsBase_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(Floats t) -> bool"""
        return _RMF_HDF5._FloatsTraitsBase_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5._FloatsTraitsBase_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5._FloatsTraitsBase_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5._FloatsTraitsBase_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> Floats"""
        return _RMF_HDF5._FloatsTraitsBase_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5._FloatsTraitsBase_get_name()

    get_name = staticmethod(get_name)

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, Floats v)"""
        return _RMF_HDF5._FloatsTraitsBase_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Floats"""
        return _RMF_HDF5._FloatsTraitsBase_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(arg1, arg2, arg3, arg4):
        """write_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, FloatsList arg4)"""
        return _RMF_HDF5._FloatsTraitsBase_write_values_dataset(arg1, arg2, arg3, arg4)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(arg1, arg2, arg3, arg4):
        """read_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, unsigned int arg4) -> FloatsList"""
        return _RMF_HDF5._FloatsTraitsBase_read_values_dataset(arg1, arg2, arg3, arg4)

    read_values_dataset = staticmethod(read_values_dataset)

    def read_values_attribute(arg1, arg2):
        """read_values_attribute(hid_t arg1, unsigned int arg2) -> FloatsList"""
        return _RMF_HDF5._FloatsTraitsBase_read_values_attribute(arg1, arg2)

    read_values_attribute = staticmethod(read_values_attribute)

    def write_values_attribute(arg1, arg2):
        """write_values_attribute(hid_t arg1, FloatsList arg2)"""
        return _RMF_HDF5._FloatsTraitsBase_write_values_attribute(arg1, arg2)

    write_values_attribute = staticmethod(write_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::SimplePluralTraits<(RMF::HDF5::FloatTraits)> self) -> _FloatsTraitsBase"""
        this = _RMF_HDF5.new__FloatsTraitsBase()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__FloatsTraitsBase
    __del__ = lambda self: None
_FloatsTraitsBase_swigregister = _RMF_HDF5._FloatsTraitsBase_swigregister
_FloatsTraitsBase_swigregister(_FloatsTraitsBase)

def _FloatsTraitsBase_get_index():
    """_FloatsTraitsBase_get_index() -> int"""
    return _RMF_HDF5._FloatsTraitsBase_get_index()

def _FloatsTraitsBase_get_null_value():
    """_FloatsTraitsBase_get_null_value() -> Floats"""
    return _RMF_HDF5._FloatsTraitsBase_get_null_value()

def _FloatsTraitsBase_get_is_null_value(t):
    """_FloatsTraitsBase_get_is_null_value(Floats t) -> bool"""
    return _RMF_HDF5._FloatsTraitsBase_get_is_null_value(t)

def _FloatsTraitsBase_get_hdf5_fill_type():
    """_FloatsTraitsBase_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5._FloatsTraitsBase_get_hdf5_fill_type()

def _FloatsTraitsBase_get_hdf5_disk_type():
    """_FloatsTraitsBase_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5._FloatsTraitsBase_get_hdf5_disk_type()

def _FloatsTraitsBase_get_hdf5_memory_type():
    """_FloatsTraitsBase_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5._FloatsTraitsBase_get_hdf5_memory_type()

def _FloatsTraitsBase_get_fill_value():
    """_FloatsTraitsBase_get_fill_value() -> Floats"""
    return _RMF_HDF5._FloatsTraitsBase_get_fill_value()

def _FloatsTraitsBase_get_name():
    """_FloatsTraitsBase_get_name() -> std::string"""
    return _RMF_HDF5._FloatsTraitsBase_get_name()

def _FloatsTraitsBase_write_value_dataset(d, iss, s, v):
    """_FloatsTraitsBase_write_value_dataset(hid_t d, hid_t iss, hid_t s, Floats v)"""
    return _RMF_HDF5._FloatsTraitsBase_write_value_dataset(d, iss, s, v)

def _FloatsTraitsBase_read_value_dataset(d, iss, sp):
    """_FloatsTraitsBase_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Floats"""
    return _RMF_HDF5._FloatsTraitsBase_read_value_dataset(d, iss, sp)

def _FloatsTraitsBase_write_values_dataset(arg2, arg3, arg4, arg5):
    """_FloatsTraitsBase_write_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, FloatsList arg5)"""
    return _RMF_HDF5._FloatsTraitsBase_write_values_dataset(arg2, arg3, arg4, arg5)

def _FloatsTraitsBase_read_values_dataset(arg2, arg3, arg4, arg5):
    """_FloatsTraitsBase_read_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, unsigned int arg5) -> FloatsList"""
    return _RMF_HDF5._FloatsTraitsBase_read_values_dataset(arg2, arg3, arg4, arg5)

def _FloatsTraitsBase_read_values_attribute(arg2, arg3):
    """_FloatsTraitsBase_read_values_attribute(hid_t arg2, unsigned int arg3) -> FloatsList"""
    return _RMF_HDF5._FloatsTraitsBase_read_values_attribute(arg2, arg3)

def _FloatsTraitsBase_write_values_attribute(arg2, arg3):
    """_FloatsTraitsBase_write_values_attribute(hid_t arg2, FloatsList arg3)"""
    return _RMF_HDF5._FloatsTraitsBase_write_values_attribute(arg2, arg3)

class _IndexTraitsBaseClass(IndexTraitsBase):
    """Proxy of C++ RMF::HDF5::SimpleTraits<(RMF::HDF5::IndexTraitsBase)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IndexTraitsBaseClass, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _IndexTraitsBaseClass, name)
    __repr__ = _swig_repr

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::IndexTraitsBase::Type v)"""
        return _RMF_HDF5._IndexTraitsBaseClass_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::IndexTraitsBase::Type"""
        return _RMF_HDF5._IndexTraitsBaseClass_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(d, iss, s, v):
        """write_values_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
        return _RMF_HDF5._IndexTraitsBaseClass_write_values_dataset(d, iss, s, v)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(d, iss, sp, sz):
        """read_values_dataset(hid_t d, hid_t iss, hid_t sp, unsigned int sz) -> Ints"""
        return _RMF_HDF5._IndexTraitsBaseClass_read_values_dataset(d, iss, sp, sz)

    read_values_dataset = staticmethod(read_values_dataset)

    def write_values_attribute(a, v):
        """write_values_attribute(hid_t a, Ints v)"""
        return _RMF_HDF5._IndexTraitsBaseClass_write_values_attribute(a, v)

    write_values_attribute = staticmethod(write_values_attribute)

    def read_values_attribute(a, sz):
        """read_values_attribute(hid_t a, unsigned int sz) -> Ints"""
        return _RMF_HDF5._IndexTraitsBaseClass_read_values_attribute(a, sz)

    read_values_attribute = staticmethod(read_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::SimpleTraits<(RMF::HDF5::IndexTraitsBase)> self) -> _IndexTraitsBaseClass"""
        this = _RMF_HDF5.new__IndexTraitsBaseClass()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IndexTraitsBaseClass
    __del__ = lambda self: None
_IndexTraitsBaseClass_swigregister = _RMF_HDF5._IndexTraitsBaseClass_swigregister
_IndexTraitsBaseClass_swigregister(_IndexTraitsBaseClass)

def _IndexTraitsBaseClass_write_value_dataset(d, iss, s, v):
    """_IndexTraitsBaseClass_write_value_dataset(hid_t d, hid_t iss, hid_t s, RMF::HDF5::IndexTraitsBase::Type v)"""
    return _RMF_HDF5._IndexTraitsBaseClass_write_value_dataset(d, iss, s, v)

def _IndexTraitsBaseClass_read_value_dataset(d, iss, sp):
    """_IndexTraitsBaseClass_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> RMF::HDF5::IndexTraitsBase::Type"""
    return _RMF_HDF5._IndexTraitsBaseClass_read_value_dataset(d, iss, sp)

def _IndexTraitsBaseClass_write_values_dataset(d, iss, s, v):
    """_IndexTraitsBaseClass_write_values_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
    return _RMF_HDF5._IndexTraitsBaseClass_write_values_dataset(d, iss, s, v)

def _IndexTraitsBaseClass_read_values_dataset(d, iss, sp, sz):
    """_IndexTraitsBaseClass_read_values_dataset(hid_t d, hid_t iss, hid_t sp, unsigned int sz) -> Ints"""
    return _RMF_HDF5._IndexTraitsBaseClass_read_values_dataset(d, iss, sp, sz)

def _IndexTraitsBaseClass_write_values_attribute(a, v):
    """_IndexTraitsBaseClass_write_values_attribute(hid_t a, Ints v)"""
    return _RMF_HDF5._IndexTraitsBaseClass_write_values_attribute(a, v)

def _IndexTraitsBaseClass_read_values_attribute(a, sz):
    """_IndexTraitsBaseClass_read_values_attribute(hid_t a, unsigned int sz) -> Ints"""
    return _RMF_HDF5._IndexTraitsBaseClass_read_values_attribute(a, sz)

class _IndexesTraitsBase(_object):
    """Proxy of C++ RMF::HDF5::SimplePluralTraits<(RMF::HDF5::IndexTraits)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IndexesTraitsBase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _IndexesTraitsBase, name)
    __repr__ = _swig_repr
    BatchOperations = _RMF_HDF5._IndexesTraitsBase_BatchOperations

    def get_index():
        """get_index() -> int"""
        return _RMF_HDF5._IndexesTraitsBase_get_index()

    get_index = staticmethod(get_index)

    def get_null_value():
        """get_null_value() -> Ints"""
        return _RMF_HDF5._IndexesTraitsBase_get_null_value()

    get_null_value = staticmethod(get_null_value)

    def get_is_null_value(t):
        """get_is_null_value(Ints t) -> bool"""
        return _RMF_HDF5._IndexesTraitsBase_get_is_null_value(t)

    get_is_null_value = staticmethod(get_is_null_value)

    def get_hdf5_fill_type():
        """get_hdf5_fill_type() -> hid_t"""
        return _RMF_HDF5._IndexesTraitsBase_get_hdf5_fill_type()

    get_hdf5_fill_type = staticmethod(get_hdf5_fill_type)

    def get_hdf5_disk_type():
        """get_hdf5_disk_type() -> hid_t"""
        return _RMF_HDF5._IndexesTraitsBase_get_hdf5_disk_type()

    get_hdf5_disk_type = staticmethod(get_hdf5_disk_type)

    def get_hdf5_memory_type():
        """get_hdf5_memory_type() -> hid_t"""
        return _RMF_HDF5._IndexesTraitsBase_get_hdf5_memory_type()

    get_hdf5_memory_type = staticmethod(get_hdf5_memory_type)

    def get_fill_value():
        """get_fill_value() -> Ints"""
        return _RMF_HDF5._IndexesTraitsBase_get_fill_value()

    get_fill_value = staticmethod(get_fill_value)

    def get_name():
        """get_name() -> std::string"""
        return _RMF_HDF5._IndexesTraitsBase_get_name()

    get_name = staticmethod(get_name)

    def write_value_dataset(d, iss, s, v):
        """write_value_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
        return _RMF_HDF5._IndexesTraitsBase_write_value_dataset(d, iss, s, v)

    write_value_dataset = staticmethod(write_value_dataset)

    def read_value_dataset(d, iss, sp):
        """read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Ints"""
        return _RMF_HDF5._IndexesTraitsBase_read_value_dataset(d, iss, sp)

    read_value_dataset = staticmethod(read_value_dataset)

    def write_values_dataset(arg1, arg2, arg3, arg4):
        """write_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, IntsList arg4)"""
        return _RMF_HDF5._IndexesTraitsBase_write_values_dataset(arg1, arg2, arg3, arg4)

    write_values_dataset = staticmethod(write_values_dataset)

    def read_values_dataset(arg1, arg2, arg3, arg4):
        """read_values_dataset(hid_t arg1, hid_t arg2, hid_t arg3, unsigned int arg4) -> IntsList"""
        return _RMF_HDF5._IndexesTraitsBase_read_values_dataset(arg1, arg2, arg3, arg4)

    read_values_dataset = staticmethod(read_values_dataset)

    def read_values_attribute(arg1, arg2):
        """read_values_attribute(hid_t arg1, unsigned int arg2) -> IntsList"""
        return _RMF_HDF5._IndexesTraitsBase_read_values_attribute(arg1, arg2)

    read_values_attribute = staticmethod(read_values_attribute)

    def write_values_attribute(arg1, arg2):
        """write_values_attribute(hid_t arg1, IntsList arg2)"""
        return _RMF_HDF5._IndexesTraitsBase_write_values_attribute(arg1, arg2)

    write_values_attribute = staticmethod(write_values_attribute)

    def __init__(self):
        """__init__(RMF::HDF5::SimplePluralTraits<(RMF::HDF5::IndexTraits)> self) -> _IndexesTraitsBase"""
        this = _RMF_HDF5.new__IndexesTraitsBase()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IndexesTraitsBase
    __del__ = lambda self: None
_IndexesTraitsBase_swigregister = _RMF_HDF5._IndexesTraitsBase_swigregister
_IndexesTraitsBase_swigregister(_IndexesTraitsBase)

def _IndexesTraitsBase_get_index():
    """_IndexesTraitsBase_get_index() -> int"""
    return _RMF_HDF5._IndexesTraitsBase_get_index()

def _IndexesTraitsBase_get_null_value():
    """_IndexesTraitsBase_get_null_value() -> Ints"""
    return _RMF_HDF5._IndexesTraitsBase_get_null_value()

def _IndexesTraitsBase_get_is_null_value(t):
    """_IndexesTraitsBase_get_is_null_value(Ints t) -> bool"""
    return _RMF_HDF5._IndexesTraitsBase_get_is_null_value(t)

def _IndexesTraitsBase_get_hdf5_fill_type():
    """_IndexesTraitsBase_get_hdf5_fill_type() -> hid_t"""
    return _RMF_HDF5._IndexesTraitsBase_get_hdf5_fill_type()

def _IndexesTraitsBase_get_hdf5_disk_type():
    """_IndexesTraitsBase_get_hdf5_disk_type() -> hid_t"""
    return _RMF_HDF5._IndexesTraitsBase_get_hdf5_disk_type()

def _IndexesTraitsBase_get_hdf5_memory_type():
    """_IndexesTraitsBase_get_hdf5_memory_type() -> hid_t"""
    return _RMF_HDF5._IndexesTraitsBase_get_hdf5_memory_type()

def _IndexesTraitsBase_get_fill_value():
    """_IndexesTraitsBase_get_fill_value() -> Ints"""
    return _RMF_HDF5._IndexesTraitsBase_get_fill_value()

def _IndexesTraitsBase_get_name():
    """_IndexesTraitsBase_get_name() -> std::string"""
    return _RMF_HDF5._IndexesTraitsBase_get_name()

def _IndexesTraitsBase_write_value_dataset(d, iss, s, v):
    """_IndexesTraitsBase_write_value_dataset(hid_t d, hid_t iss, hid_t s, Ints v)"""
    return _RMF_HDF5._IndexesTraitsBase_write_value_dataset(d, iss, s, v)

def _IndexesTraitsBase_read_value_dataset(d, iss, sp):
    """_IndexesTraitsBase_read_value_dataset(hid_t d, hid_t iss, hid_t sp) -> Ints"""
    return _RMF_HDF5._IndexesTraitsBase_read_value_dataset(d, iss, sp)

def _IndexesTraitsBase_write_values_dataset(arg2, arg3, arg4, arg5):
    """_IndexesTraitsBase_write_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, IntsList arg5)"""
    return _RMF_HDF5._IndexesTraitsBase_write_values_dataset(arg2, arg3, arg4, arg5)

def _IndexesTraitsBase_read_values_dataset(arg2, arg3, arg4, arg5):
    """_IndexesTraitsBase_read_values_dataset(hid_t arg2, hid_t arg3, hid_t arg4, unsigned int arg5) -> IntsList"""
    return _RMF_HDF5._IndexesTraitsBase_read_values_dataset(arg2, arg3, arg4, arg5)

def _IndexesTraitsBase_read_values_attribute(arg2, arg3):
    """_IndexesTraitsBase_read_values_attribute(hid_t arg2, unsigned int arg3) -> IntsList"""
    return _RMF_HDF5._IndexesTraitsBase_read_values_attribute(arg2, arg3)

def _IndexesTraitsBase_write_values_attribute(arg2, arg3):
    """_IndexesTraitsBase_write_values_attribute(hid_t arg2, IntsList arg3)"""
    return _RMF_HDF5._IndexesTraitsBase_write_values_attribute(arg2, arg3)

class _IntTraits(_IntTraitsBaseClass):
    """Proxy of C++ RMF::HDF5::IntTraits class."""

    __swig_setmethods__ = {}
    for _s in [_IntTraitsBaseClass]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IntTraits, name, value)
    __swig_getmethods__ = {}
    for _s in [_IntTraitsBaseClass]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _IntTraits, name)
    __repr__ = _swig_repr

    def __init__(self):
        """__init__(RMF::HDF5::IntTraits self) -> _IntTraits"""
        this = _RMF_HDF5.new__IntTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IntTraits
    __del__ = lambda self: None
_IntTraits_swigregister = _RMF_HDF5._IntTraits_swigregister
_IntTraits_swigregister(_IntTraits)

class _IntsTraits(_IntsTraitsBase):
    """Proxy of C++ RMF::HDF5::IntsTraits class."""

    __swig_setmethods__ = {}
    for _s in [_IntsTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IntsTraits, name, value)
    __swig_getmethods__ = {}
    for _s in [_IntsTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _IntsTraits, name)
    __repr__ = _swig_repr

    def __init__(self):
        """__init__(RMF::HDF5::IntsTraits self) -> _IntsTraits"""
        this = _RMF_HDF5.new__IntsTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IntsTraits
    __del__ = lambda self: None
_IntsTraits_swigregister = _RMF_HDF5._IntsTraits_swigregister
_IntsTraits_swigregister(_IntsTraits)

class _FloatTraits(_FloatTraitsBaseClass):
    """Proxy of C++ RMF::HDF5::FloatTraits class."""

    __swig_setmethods__ = {}
    for _s in [_FloatTraitsBaseClass]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _FloatTraits, name, value)
    __swig_getmethods__ = {}
    for _s in [_FloatTraitsBaseClass]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _FloatTraits, name)
    __repr__ = _swig_repr

    def __init__(self):
        """__init__(RMF::HDF5::FloatTraits self) -> _FloatTraits"""
        this = _RMF_HDF5.new__FloatTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__FloatTraits
    __del__ = lambda self: None
_FloatTraits_swigregister = _RMF_HDF5._FloatTraits_swigregister
_FloatTraits_swigregister(_FloatTraits)

class _FloatsTraits(_FloatsTraitsBase):
    """Proxy of C++ RMF::HDF5::FloatsTraits class."""

    __swig_setmethods__ = {}
    for _s in [_FloatsTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _FloatsTraits, name, value)
    __swig_getmethods__ = {}
    for _s in [_FloatsTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _FloatsTraits, name)
    __repr__ = _swig_repr

    def __init__(self):
        """__init__(RMF::HDF5::FloatsTraits self) -> _FloatsTraits"""
        this = _RMF_HDF5.new__FloatsTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__FloatsTraits
    __del__ = lambda self: None
_FloatsTraits_swigregister = _RMF_HDF5._FloatsTraits_swigregister
_FloatsTraits_swigregister(_FloatsTraits)

class _IndexTraits(_IndexTraitsBaseClass):
    """Proxy of C++ RMF::HDF5::IndexTraits class."""

    __swig_setmethods__ = {}
    for _s in [_IndexTraitsBaseClass]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IndexTraits, name, value)
    __swig_getmethods__ = {}
    for _s in [_IndexTraitsBaseClass]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _IndexTraits, name)
    __repr__ = _swig_repr

    def __init__(self):
        """__init__(RMF::HDF5::IndexTraits self) -> _IndexTraits"""
        this = _RMF_HDF5.new__IndexTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IndexTraits
    __del__ = lambda self: None
_IndexTraits_swigregister = _RMF_HDF5._IndexTraits_swigregister
_IndexTraits_swigregister(_IndexTraits)

class _IndexesTraits(_IndexesTraitsBase):
    """Proxy of C++ RMF::HDF5::IndexesTraits class."""

    __swig_setmethods__ = {}
    for _s in [_IndexesTraitsBase]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _IndexesTraits, name, value)
    __swig_getmethods__ = {}
    for _s in [_IndexesTraitsBase]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _IndexesTraits, name)
    __repr__ = _swig_repr

    def __init__(self):
        """__init__(RMF::HDF5::IndexesTraits self) -> _IndexesTraits"""
        this = _RMF_HDF5.new__IndexesTraits()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RMF_HDF5.delete__IndexesTraits
    __del__ = lambda self: None
_IndexesTraits_swigregister = _RMF_HDF5._IndexesTraits_swigregister
_IndexesTraits_swigregister(_IndexesTraits)

class Object(_object):
    """Proxy of C++ RMF::HDF5::Object class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Object, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Object, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")

    def get_name(self):
        """get_name(Object self) -> std::string"""
        return _RMF_HDF5.Object_get_name(self)


    def get_file(self):
        """get_file(Object self) -> File"""
        return _RMF_HDF5.Object_get_file(self)


    def __str__(self):
        """__str__(Object self) -> std::string"""
        return _RMF_HDF5.Object___str__(self)


    def __repr__(self):
        """__repr__(Object self) -> std::string"""
        return _RMF_HDF5.Object___repr__(self)


    def get_handle(self):
        """get_handle(Object self) -> hid_t"""
        return _RMF_HDF5.Object_get_handle(self)

    __swig_destroy__ = _RMF_HDF5.delete_Object
    __del__ = lambda self: None
Object_swigregister = _RMF_HDF5.Object_swigregister
Object_swigregister(Object)

class _ConstAttributesObject(Object):
    """Proxy of C++ RMF::HDF5::ConstAttributes<(RMF::HDF5::Object)> class."""

    __swig_setmethods__ = {}
    for _s in [Object]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _ConstAttributesObject, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _ConstAttributesObject, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def get_has_attribute(self, nm):
        """get_has_attribute(_ConstAttributesObject self, std::string nm) -> bool"""
        return _RMF_HDF5._ConstAttributesObject_get_has_attribute(self, nm)


    def get_int_attribute(self, nm):
        """get_int_attribute(_ConstAttributesObject self, std::string nm) -> Ints"""
        return _RMF_HDF5._ConstAttributesObject_get_int_attribute(self, nm)


    def get_float_attribute(self, nm):
        """get_float_attribute(_ConstAttributesObject self, std::string nm) -> Floats"""
        return _RMF_HDF5._ConstAttributesObject_get_float_attribute(self, nm)


    def get_index_attribute(self, nm):
        """get_index_attribute(_ConstAttributesObject self, std::string nm) -> Ints"""
        return _RMF_HDF5._ConstAttributesObject_get_index_attribute(self, nm)


    def get_char_attribute(self, nm):
        """get_char_attribute(_ConstAttributesObject self, std::string nm) -> std::string"""
        return _RMF_HDF5._ConstAttributesObject_get_char_attribute(self, nm)

    __swig_destroy__ = _RMF_HDF5.delete__ConstAttributesObject
    __del__ = lambda self: None
_ConstAttributesObject_swigregister = _RMF_HDF5._ConstAttributesObject_swigregister
_ConstAttributesObject_swigregister(_ConstAttributesObject)

class DataSetIndex1D(_object):
    """Proxy of C++ RMF::HDF5::DataSetIndexD<(1)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataSetIndex1D, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataSetIndex1D, name)

    def __init__(self, *args):
        """
        __init__(RMF::HDF5::DataSetIndexD<(1)> self, Ints o) -> DataSetIndex1D
        __init__(RMF::HDF5::DataSetIndexD<(1)> self) -> DataSetIndex1D
        __init__(RMF::HDF5::DataSetIndexD<(1)> self, unsigned int i) -> DataSetIndex1D
        __init__(RMF::HDF5::DataSetIndexD<(1)> self, unsigned int i, unsigned int j) -> DataSetIndex1D
        __init__(RMF::HDF5::DataSetIndexD<(1)> self, unsigned int i, unsigned int j, unsigned int k) -> DataSetIndex1D
        """
        this = _RMF_HDF5.new_DataSetIndex1D(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, i):
        """__getitem__(DataSetIndex1D self, unsigned int i) -> int"""
        return _RMF_HDF5.DataSetIndex1D___getitem__(self, i)


    def get_dimension(self):
        """get_dimension(DataSetIndex1D self) -> unsigned int"""
        return _RMF_HDF5.DataSetIndex1D_get_dimension(self)


    def __str__(self):
        """__str__(DataSetIndex1D self) -> std::string"""
        return _RMF_HDF5.DataSetIndex1D___str__(self)


    def __repr__(self):
        """__repr__(DataSetIndex1D self) -> std::string"""
        return _RMF_HDF5.DataSetIndex1D___repr__(self)


    def __eq__(self, o):
        """__eq__(DataSetIndex1D self, DataSetIndex1D o) -> bool"""
        return _RMF_HDF5.DataSetIndex1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(DataSetIndex1D self, DataSetIndex1D o) -> bool"""
        return _RMF_HDF5.DataSetIndex1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(DataSetIndex1D self, DataSetIndex1D o) -> bool"""
        return _RMF_HDF5.DataSetIndex1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(DataSetIndex1D self, DataSetIndex1D o) -> bool"""
        return _RMF_HDF5.DataSetIndex1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(DataSetIndex1D self, DataSetIndex1D o) -> bool"""
        return _RMF_HDF5.DataSetIndex1D___ge__(self, o)


    def __le__(self, o):
        """__le__(DataSetIndex1D self, DataSetIndex1D o) -> bool"""
        return _RMF_HDF5.DataSetIndex1D___le__(self, o)


    def __hash__(self):
        """__hash__(DataSetIndex1D self) -> std::size_t"""
        return _RMF_HDF5.DataSetIndex1D___hash__(self)

    __swig_destroy__ = _RMF_HDF5.delete_DataSetIndex1D
    __del__ = lambda self: None
DataSetIndex1D_swigregister = _RMF_HDF5.DataSetIndex1D_swigregister
DataSetIndex1D_swigregister(DataSetIndex1D)

class DataSetIndex2D(_object):
    """Proxy of C++ RMF::HDF5::DataSetIndexD<(2)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataSetIndex2D, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataSetIndex2D, name)

    def __init__(self, *args):
        """
        __init__(RMF::HDF5::DataSetIndexD<(2)> self, Ints o) -> DataSetIndex2D
        __init__(RMF::HDF5::DataSetIndexD<(2)> self) -> DataSetIndex2D
        __init__(RMF::HDF5::DataSetIndexD<(2)> self, unsigned int i) -> DataSetIndex2D
        __init__(RMF::HDF5::DataSetIndexD<(2)> self, unsigned int i, unsigned int j) -> DataSetIndex2D
        __init__(RMF::HDF5::DataSetIndexD<(2)> self, unsigned int i, unsigned int j, unsigned int k) -> DataSetIndex2D
        """
        this = _RMF_HDF5.new_DataSetIndex2D(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, i):
        """__getitem__(DataSetIndex2D self, unsigned int i) -> int"""
        return _RMF_HDF5.DataSetIndex2D___getitem__(self, i)


    def get_dimension(self):
        """get_dimension(DataSetIndex2D self) -> unsigned int"""
        return _RMF_HDF5.DataSetIndex2D_get_dimension(self)


    def __str__(self):
        """__str__(DataSetIndex2D self) -> std::string"""
        return _RMF_HDF5.DataSetIndex2D___str__(self)


    def __repr__(self):
        """__repr__(DataSetIndex2D self) -> std::string"""
        return _RMF_HDF5.DataSetIndex2D___repr__(self)


    def __eq__(self, o):
        """__eq__(DataSetIndex2D self, DataSetIndex2D o) -> bool"""
        return _RMF_HDF5.DataSetIndex2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(DataSetIndex2D self, DataSetIndex2D o) -> bool"""
        return _RMF_HDF5.DataSetIndex2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(DataSetIndex2D self, DataSetIndex2D o) -> bool"""
        return _RMF_HDF5.DataSetIndex2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(DataSetIndex2D self, DataSetIndex2D o) -> bool"""
        return _RMF_HDF5.DataSetIndex2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(DataSetIndex2D self, DataSetIndex2D o) -> bool"""
        return _RMF_HDF5.DataSetIndex2D___ge__(self, o)


    def __le__(self, o):
        """__le__(DataSetIndex2D self, DataSetIndex2D o) -> bool"""
        return _RMF_HDF5.DataSetIndex2D___le__(self, o)


    def __hash__(self):
        """__hash__(DataSetIndex2D self) -> std::size_t"""
        return _RMF_HDF5.DataSetIndex2D___hash__(self)

    __swig_destroy__ = _RMF_HDF5.delete_DataSetIndex2D
    __del__ = lambda self: None
DataSetIndex2D_swigregister = _RMF_HDF5.DataSetIndex2D_swigregister
DataSetIndex2D_swigregister(DataSetIndex2D)

class DataSetIndex3D(_object):
    """Proxy of C++ RMF::HDF5::DataSetIndexD<(3)> class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataSetIndex3D, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataSetIndex3D, name)

    def __init__(self, *args):
        """
        __init__(RMF::HDF5::DataSetIndexD<(3)> self, Ints o) -> DataSetIndex3D
        __init__(RMF::HDF5::DataSetIndexD<(3)> self) -> DataSetIndex3D
        __init__(RMF::HDF5::DataSetIndexD<(3)> self, unsigned int i) -> DataSetIndex3D
        __init__(RMF::HDF5::DataSetIndexD<(3)> self, unsigned int i, unsigned int j) -> DataSetIndex3D
        __init__(RMF::HDF5::DataSetIndexD<(3)> self, unsigned int i, unsigned int j, unsigned int k) -> DataSetIndex3D
        """
        this = _RMF_HDF5.new_DataSetIndex3D(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __getitem__(self, i):
        """__getitem__(DataSetIndex3D self, unsigned int i) -> int"""
        return _RMF_HDF5.DataSetIndex3D___getitem__(self, i)


    def get_dimension(self):
        """get_dimension(DataSetIndex3D self) -> unsigned int"""
        return _RMF_HDF5.DataSetIndex3D_get_dimension(self)


    def __str__(self):
        """__str__(DataSetIndex3D self) -> std::string"""
        return _RMF_HDF5.DataSetIndex3D___str__(self)


    def __repr__(self):
        """__repr__(DataSetIndex3D self) -> std::string"""
        return _RMF_HDF5.DataSetIndex3D___repr__(self)


    def __eq__(self, o):
        """__eq__(DataSetIndex3D self, DataSetIndex3D o) -> bool"""
        return _RMF_HDF5.DataSetIndex3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(DataSetIndex3D self, DataSetIndex3D o) -> bool"""
        return _RMF_HDF5.DataSetIndex3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(DataSetIndex3D self, DataSetIndex3D o) -> bool"""
        return _RMF_HDF5.DataSetIndex3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(DataSetIndex3D self, DataSetIndex3D o) -> bool"""
        return _RMF_HDF5.DataSetIndex3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(DataSetIndex3D self, DataSetIndex3D o) -> bool"""
        return _RMF_HDF5.DataSetIndex3D___ge__(self, o)


    def __le__(self, o):
        """__le__(DataSetIndex3D self, DataSetIndex3D o) -> bool"""
        return _RMF_HDF5.DataSetIndex3D___le__(self, o)


    def __hash__(self):
        """__hash__(DataSetIndex3D self) -> std::size_t"""
        return _RMF_HDF5.DataSetIndex3D___hash__(self)

    __swig_destroy__ = _RMF_HDF5.delete_DataSetIndex3D
    __del__ = lambda self: None
DataSetIndex3D_swigregister = _RMF_HDF5.DataSetIndex3D_swigregister
DataSetIndex3D_swigregister(DataSetIndex3D)

GZIP_COMPRESSION = _RMF_HDF5.GZIP_COMPRESSION
SLIB_COMPRESSION = _RMF_HDF5.SLIB_COMPRESSION
NO_COMPRESSION = _RMF_HDF5.NO_COMPRESSION
class IntConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,1)> self) -> IntConstDataSet1D"""
        this = _RMF_HDF5.new_IntConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IntConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.IntConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(IntConstDataSet1D self, DataSetIndex1D ijk) -> RMF::HDF5::IntTraits::Type"""
        return _RMF_HDF5.IntConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(IntConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IntConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IntConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> Ints"""
        return _RMF_HDF5.IntConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IntConstDataSet1D self, IntConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IntConstDataSet1D self, IntConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IntConstDataSet1D self, IntConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IntConstDataSet1D self, IntConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IntConstDataSet1D self, IntConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(IntConstDataSet1D self, IntConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IntConstDataSet1D
    __del__ = lambda self: None
IntConstDataSet1D_swigregister = _RMF_HDF5.IntConstDataSet1D_swigregister
IntConstDataSet1D_swigregister(IntConstDataSet1D)

class IntConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,2)> self) -> IntConstDataSet2D"""
        this = _RMF_HDF5.new_IntConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IntConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.IntConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(IntConstDataSet2D self, DataSetIndex2D ijk) -> RMF::HDF5::IntTraits::Type"""
        return _RMF_HDF5.IntConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(IntConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IntConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IntConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> Ints"""
        return _RMF_HDF5.IntConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IntConstDataSet2D self, IntConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IntConstDataSet2D self, IntConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IntConstDataSet2D self, IntConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IntConstDataSet2D self, IntConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IntConstDataSet2D self, IntConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(IntConstDataSet2D self, IntConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IntConstDataSet2D
    __del__ = lambda self: None
IntConstDataSet2D_swigregister = _RMF_HDF5.IntConstDataSet2D_swigregister
IntConstDataSet2D_swigregister(IntConstDataSet2D)

class IntConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,3)> self) -> IntConstDataSet3D"""
        this = _RMF_HDF5.new_IntConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IntConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.IntConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(IntConstDataSet3D self, DataSetIndex3D ijk) -> RMF::HDF5::IntTraits::Type"""
        return _RMF_HDF5.IntConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(IntConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IntConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IntConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> Ints"""
        return _RMF_HDF5.IntConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IntConstDataSet3D self, IntConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IntConstDataSet3D self, IntConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IntConstDataSet3D self, IntConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IntConstDataSet3D self, IntConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IntConstDataSet3D self, IntConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(IntConstDataSet3D self, IntConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IntConstDataSet3D
    __del__ = lambda self: None
IntConstDataSet3D_swigregister = _RMF_HDF5.IntConstDataSet3D_swigregister
IntConstDataSet3D_swigregister(IntConstDataSet3D)

class IntDataSetAttributes1D(IntConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IntConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IntDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IntDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IntDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IntDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IntDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IntDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IntDataSetAttributes1D
    __del__ = lambda self: None
IntDataSetAttributes1D_swigregister = _RMF_HDF5.IntDataSetAttributes1D_swigregister
IntDataSetAttributes1D_swigregister(IntDataSetAttributes1D)

class IntDataSetAttributes2D(IntConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IntConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IntDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IntDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IntDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IntDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IntDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IntDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IntDataSetAttributes2D
    __del__ = lambda self: None
IntDataSetAttributes2D_swigregister = _RMF_HDF5.IntDataSetAttributes2D_swigregister
IntDataSetAttributes2D_swigregister(IntDataSetAttributes2D)

class IntDataSetAttributes3D(IntConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IntConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IntDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IntDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IntDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IntDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IntDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IntDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IntDataSetAttributes3D
    __del__ = lambda self: None
IntDataSetAttributes3D_swigregister = _RMF_HDF5.IntDataSetAttributes3D_swigregister
IntDataSetAttributes3D_swigregister(IntDataSetAttributes3D)

class IntsConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,1)> self) -> IntsConstDataSet1D"""
        this = _RMF_HDF5.new_IntsConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IntsConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.IntsConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(IntsConstDataSet1D self, DataSetIndex1D ijk) -> Ints"""
        return _RMF_HDF5.IntsConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(IntsConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntsConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IntsConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntsConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IntsConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> IntsList"""
        return _RMF_HDF5.IntsConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IntsConstDataSet1D self, IntsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IntsConstDataSet1D self, IntsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IntsConstDataSet1D self, IntsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IntsConstDataSet1D self, IntsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IntsConstDataSet1D self, IntsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(IntsConstDataSet1D self, IntsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IntsConstDataSet1D
    __del__ = lambda self: None
IntsConstDataSet1D_swigregister = _RMF_HDF5.IntsConstDataSet1D_swigregister
IntsConstDataSet1D_swigregister(IntsConstDataSet1D)

class IntsConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,2)> self) -> IntsConstDataSet2D"""
        this = _RMF_HDF5.new_IntsConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IntsConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.IntsConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(IntsConstDataSet2D self, DataSetIndex2D ijk) -> Ints"""
        return _RMF_HDF5.IntsConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(IntsConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntsConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IntsConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntsConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IntsConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> IntsList"""
        return _RMF_HDF5.IntsConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IntsConstDataSet2D self, IntsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IntsConstDataSet2D self, IntsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IntsConstDataSet2D self, IntsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IntsConstDataSet2D self, IntsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IntsConstDataSet2D self, IntsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(IntsConstDataSet2D self, IntsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IntsConstDataSet2D
    __del__ = lambda self: None
IntsConstDataSet2D_swigregister = _RMF_HDF5.IntsConstDataSet2D_swigregister
IntsConstDataSet2D_swigregister(IntsConstDataSet2D)

class IntsConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,3)> self) -> IntsConstDataSet3D"""
        this = _RMF_HDF5.new_IntsConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IntsConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.IntsConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(IntsConstDataSet3D self, DataSetIndex3D ijk) -> Ints"""
        return _RMF_HDF5.IntsConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(IntsConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntsConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IntsConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntsConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IntsConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> IntsList"""
        return _RMF_HDF5.IntsConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IntsConstDataSet3D self, IntsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IntsConstDataSet3D self, IntsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IntsConstDataSet3D self, IntsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IntsConstDataSet3D self, IntsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IntsConstDataSet3D self, IntsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(IntsConstDataSet3D self, IntsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IntsConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IntsConstDataSet3D
    __del__ = lambda self: None
IntsConstDataSet3D_swigregister = _RMF_HDF5.IntsConstDataSet3D_swigregister
IntsConstDataSet3D_swigregister(IntsConstDataSet3D)

class IntsDataSetAttributes1D(IntsConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IntsConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntsConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IntsDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntsDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IntsDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IntsDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IntsDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntsDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IntsDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IntsDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IntsDataSetAttributes1D
    __del__ = lambda self: None
IntsDataSetAttributes1D_swigregister = _RMF_HDF5.IntsDataSetAttributes1D_swigregister
IntsDataSetAttributes1D_swigregister(IntsDataSetAttributes1D)

class IntsDataSetAttributes2D(IntsConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IntsConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntsConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IntsDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntsDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IntsDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IntsDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IntsDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntsDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IntsDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IntsDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IntsDataSetAttributes2D
    __del__ = lambda self: None
IntsDataSetAttributes2D_swigregister = _RMF_HDF5.IntsDataSetAttributes2D_swigregister
IntsDataSetAttributes2D_swigregister(IntsDataSetAttributes2D)

class IntsDataSetAttributes3D(IntsConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IntsTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IntsConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntsConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IntsDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntsDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IntsDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IntsDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IntsDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IntsDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IntsDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IntsDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IntsDataSetAttributes3D
    __del__ = lambda self: None
IntsDataSetAttributes3D_swigregister = _RMF_HDF5.IntsDataSetAttributes3D_swigregister
IntsDataSetAttributes3D_swigregister(IntsDataSetAttributes3D)

class FloatConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,1)> self) -> FloatConstDataSet1D"""
        this = _RMF_HDF5.new_FloatConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(FloatConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.FloatConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(FloatConstDataSet1D self, DataSetIndex1D ijk) -> RMF::HDF5::FloatTraits::Type"""
        return _RMF_HDF5.FloatConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(FloatConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(FloatConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(FloatConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> Floats"""
        return _RMF_HDF5.FloatConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(FloatConstDataSet1D self, FloatConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(FloatConstDataSet1D self, FloatConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(FloatConstDataSet1D self, FloatConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(FloatConstDataSet1D self, FloatConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(FloatConstDataSet1D self, FloatConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(FloatConstDataSet1D self, FloatConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_FloatConstDataSet1D
    __del__ = lambda self: None
FloatConstDataSet1D_swigregister = _RMF_HDF5.FloatConstDataSet1D_swigregister
FloatConstDataSet1D_swigregister(FloatConstDataSet1D)

class FloatConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,2)> self) -> FloatConstDataSet2D"""
        this = _RMF_HDF5.new_FloatConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(FloatConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.FloatConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(FloatConstDataSet2D self, DataSetIndex2D ijk) -> RMF::HDF5::FloatTraits::Type"""
        return _RMF_HDF5.FloatConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(FloatConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(FloatConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(FloatConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> Floats"""
        return _RMF_HDF5.FloatConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(FloatConstDataSet2D self, FloatConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(FloatConstDataSet2D self, FloatConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(FloatConstDataSet2D self, FloatConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(FloatConstDataSet2D self, FloatConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(FloatConstDataSet2D self, FloatConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(FloatConstDataSet2D self, FloatConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_FloatConstDataSet2D
    __del__ = lambda self: None
FloatConstDataSet2D_swigregister = _RMF_HDF5.FloatConstDataSet2D_swigregister
FloatConstDataSet2D_swigregister(FloatConstDataSet2D)

class FloatConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,3)> self) -> FloatConstDataSet3D"""
        this = _RMF_HDF5.new_FloatConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(FloatConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.FloatConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(FloatConstDataSet3D self, DataSetIndex3D ijk) -> RMF::HDF5::FloatTraits::Type"""
        return _RMF_HDF5.FloatConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(FloatConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(FloatConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(FloatConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> Floats"""
        return _RMF_HDF5.FloatConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(FloatConstDataSet3D self, FloatConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(FloatConstDataSet3D self, FloatConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(FloatConstDataSet3D self, FloatConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(FloatConstDataSet3D self, FloatConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(FloatConstDataSet3D self, FloatConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(FloatConstDataSet3D self, FloatConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_FloatConstDataSet3D
    __del__ = lambda self: None
FloatConstDataSet3D_swigregister = _RMF_HDF5.FloatConstDataSet3D_swigregister
FloatConstDataSet3D_swigregister(FloatConstDataSet3D)

class FloatDataSetAttributes1D(FloatConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(FloatDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(FloatDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.FloatDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(FloatDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(FloatDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.FloatDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_FloatDataSetAttributes1D
    __del__ = lambda self: None
FloatDataSetAttributes1D_swigregister = _RMF_HDF5.FloatDataSetAttributes1D_swigregister
FloatDataSetAttributes1D_swigregister(FloatDataSetAttributes1D)

class FloatDataSetAttributes2D(FloatConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(FloatDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(FloatDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.FloatDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(FloatDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(FloatDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.FloatDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_FloatDataSetAttributes2D
    __del__ = lambda self: None
FloatDataSetAttributes2D_swigregister = _RMF_HDF5.FloatDataSetAttributes2D_swigregister
FloatDataSetAttributes2D_swigregister(FloatDataSetAttributes2D)

class FloatDataSetAttributes3D(FloatConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(FloatDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(FloatDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.FloatDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(FloatDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(FloatDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.FloatDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_FloatDataSetAttributes3D
    __del__ = lambda self: None
FloatDataSetAttributes3D_swigregister = _RMF_HDF5.FloatDataSetAttributes3D_swigregister
FloatDataSetAttributes3D_swigregister(FloatDataSetAttributes3D)

class FloatsConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,1)> self) -> FloatsConstDataSet1D"""
        this = _RMF_HDF5.new_FloatsConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(FloatsConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.FloatsConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(FloatsConstDataSet1D self, DataSetIndex1D ijk) -> Floats"""
        return _RMF_HDF5.FloatsConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(FloatsConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatsConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(FloatsConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatsConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(FloatsConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> FloatsList"""
        return _RMF_HDF5.FloatsConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(FloatsConstDataSet1D self, FloatsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(FloatsConstDataSet1D self, FloatsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(FloatsConstDataSet1D self, FloatsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(FloatsConstDataSet1D self, FloatsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(FloatsConstDataSet1D self, FloatsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(FloatsConstDataSet1D self, FloatsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsConstDataSet1D
    __del__ = lambda self: None
FloatsConstDataSet1D_swigregister = _RMF_HDF5.FloatsConstDataSet1D_swigregister
FloatsConstDataSet1D_swigregister(FloatsConstDataSet1D)

class FloatsConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,2)> self) -> FloatsConstDataSet2D"""
        this = _RMF_HDF5.new_FloatsConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(FloatsConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.FloatsConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(FloatsConstDataSet2D self, DataSetIndex2D ijk) -> Floats"""
        return _RMF_HDF5.FloatsConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(FloatsConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatsConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(FloatsConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatsConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(FloatsConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> FloatsList"""
        return _RMF_HDF5.FloatsConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(FloatsConstDataSet2D self, FloatsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(FloatsConstDataSet2D self, FloatsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(FloatsConstDataSet2D self, FloatsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(FloatsConstDataSet2D self, FloatsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(FloatsConstDataSet2D self, FloatsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(FloatsConstDataSet2D self, FloatsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsConstDataSet2D
    __del__ = lambda self: None
FloatsConstDataSet2D_swigregister = _RMF_HDF5.FloatsConstDataSet2D_swigregister
FloatsConstDataSet2D_swigregister(FloatsConstDataSet2D)

class FloatsConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,3)> self) -> FloatsConstDataSet3D"""
        this = _RMF_HDF5.new_FloatsConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(FloatsConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.FloatsConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(FloatsConstDataSet3D self, DataSetIndex3D ijk) -> Floats"""
        return _RMF_HDF5.FloatsConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(FloatsConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatsConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(FloatsConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatsConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(FloatsConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> FloatsList"""
        return _RMF_HDF5.FloatsConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(FloatsConstDataSet3D self, FloatsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(FloatsConstDataSet3D self, FloatsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(FloatsConstDataSet3D self, FloatsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(FloatsConstDataSet3D self, FloatsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(FloatsConstDataSet3D self, FloatsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(FloatsConstDataSet3D self, FloatsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.FloatsConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsConstDataSet3D
    __del__ = lambda self: None
FloatsConstDataSet3D_swigregister = _RMF_HDF5.FloatsConstDataSet3D_swigregister
FloatsConstDataSet3D_swigregister(FloatsConstDataSet3D)

class FloatsDataSetAttributes1D(FloatsConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatsConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatsConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(FloatsDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatsDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(FloatsDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.FloatsDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(FloatsDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatsDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(FloatsDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.FloatsDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsDataSetAttributes1D
    __del__ = lambda self: None
FloatsDataSetAttributes1D_swigregister = _RMF_HDF5.FloatsDataSetAttributes1D_swigregister
FloatsDataSetAttributes1D_swigregister(FloatsDataSetAttributes1D)

class FloatsDataSetAttributes2D(FloatsConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatsConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatsConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(FloatsDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatsDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(FloatsDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.FloatsDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(FloatsDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatsDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(FloatsDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.FloatsDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsDataSetAttributes2D
    __del__ = lambda self: None
FloatsDataSetAttributes2D_swigregister = _RMF_HDF5.FloatsDataSetAttributes2D_swigregister
FloatsDataSetAttributes2D_swigregister(FloatsDataSetAttributes2D)

class FloatsDataSetAttributes3D(FloatsConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::FloatsTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatsConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatsConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(FloatsDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatsDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(FloatsDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.FloatsDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(FloatsDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.FloatsDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(FloatsDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.FloatsDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsDataSetAttributes3D
    __del__ = lambda self: None
FloatsDataSetAttributes3D_swigregister = _RMF_HDF5.FloatsDataSetAttributes3D_swigregister
FloatsDataSetAttributes3D_swigregister(FloatsDataSetAttributes3D)

class IndexConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,1)> self) -> IndexConstDataSet1D"""
        this = _RMF_HDF5.new_IndexConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IndexConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.IndexConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(IndexConstDataSet1D self, DataSetIndex1D ijk) -> RMF::HDF5::IndexTraits::Type"""
        return _RMF_HDF5.IndexConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(IndexConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IndexConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IndexConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> Ints"""
        return _RMF_HDF5.IndexConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IndexConstDataSet1D self, IndexConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IndexConstDataSet1D self, IndexConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IndexConstDataSet1D self, IndexConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IndexConstDataSet1D self, IndexConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IndexConstDataSet1D self, IndexConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(IndexConstDataSet1D self, IndexConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IndexConstDataSet1D
    __del__ = lambda self: None
IndexConstDataSet1D_swigregister = _RMF_HDF5.IndexConstDataSet1D_swigregister
IndexConstDataSet1D_swigregister(IndexConstDataSet1D)

class IndexConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,2)> self) -> IndexConstDataSet2D"""
        this = _RMF_HDF5.new_IndexConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IndexConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.IndexConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(IndexConstDataSet2D self, DataSetIndex2D ijk) -> RMF::HDF5::IndexTraits::Type"""
        return _RMF_HDF5.IndexConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(IndexConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IndexConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IndexConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> Ints"""
        return _RMF_HDF5.IndexConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IndexConstDataSet2D self, IndexConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IndexConstDataSet2D self, IndexConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IndexConstDataSet2D self, IndexConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IndexConstDataSet2D self, IndexConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IndexConstDataSet2D self, IndexConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(IndexConstDataSet2D self, IndexConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IndexConstDataSet2D
    __del__ = lambda self: None
IndexConstDataSet2D_swigregister = _RMF_HDF5.IndexConstDataSet2D_swigregister
IndexConstDataSet2D_swigregister(IndexConstDataSet2D)

class IndexConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,3)> self) -> IndexConstDataSet3D"""
        this = _RMF_HDF5.new_IndexConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IndexConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.IndexConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(IndexConstDataSet3D self, DataSetIndex3D ijk) -> RMF::HDF5::IndexTraits::Type"""
        return _RMF_HDF5.IndexConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(IndexConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IndexConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IndexConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> Ints"""
        return _RMF_HDF5.IndexConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IndexConstDataSet3D self, IndexConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IndexConstDataSet3D self, IndexConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IndexConstDataSet3D self, IndexConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IndexConstDataSet3D self, IndexConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IndexConstDataSet3D self, IndexConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(IndexConstDataSet3D self, IndexConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IndexConstDataSet3D
    __del__ = lambda self: None
IndexConstDataSet3D_swigregister = _RMF_HDF5.IndexConstDataSet3D_swigregister
IndexConstDataSet3D_swigregister(IndexConstDataSet3D)

class IndexDataSetAttributes1D(IndexConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IndexDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IndexDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IndexDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IndexDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IndexDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IndexDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IndexDataSetAttributes1D
    __del__ = lambda self: None
IndexDataSetAttributes1D_swigregister = _RMF_HDF5.IndexDataSetAttributes1D_swigregister
IndexDataSetAttributes1D_swigregister(IndexDataSetAttributes1D)

class IndexDataSetAttributes2D(IndexConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IndexDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IndexDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IndexDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IndexDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IndexDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IndexDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IndexDataSetAttributes2D
    __del__ = lambda self: None
IndexDataSetAttributes2D_swigregister = _RMF_HDF5.IndexDataSetAttributes2D_swigregister
IndexDataSetAttributes2D_swigregister(IndexDataSetAttributes2D)

class IndexDataSetAttributes3D(IndexConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IndexDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IndexDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IndexDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IndexDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IndexDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IndexDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IndexDataSetAttributes3D
    __del__ = lambda self: None
IndexDataSetAttributes3D_swigregister = _RMF_HDF5.IndexDataSetAttributes3D_swigregister
IndexDataSetAttributes3D_swigregister(IndexDataSetAttributes3D)

class IndexesConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,1)> self) -> IndexesConstDataSet1D"""
        this = _RMF_HDF5.new_IndexesConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IndexesConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.IndexesConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(IndexesConstDataSet1D self, DataSetIndex1D ijk) -> Ints"""
        return _RMF_HDF5.IndexesConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(IndexesConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexesConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IndexesConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexesConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IndexesConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> IntsList"""
        return _RMF_HDF5.IndexesConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IndexesConstDataSet1D self, IndexesConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IndexesConstDataSet1D self, IndexesConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IndexesConstDataSet1D self, IndexesConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IndexesConstDataSet1D self, IndexesConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IndexesConstDataSet1D self, IndexesConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(IndexesConstDataSet1D self, IndexesConstDataSet1D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesConstDataSet1D
    __del__ = lambda self: None
IndexesConstDataSet1D_swigregister = _RMF_HDF5.IndexesConstDataSet1D_swigregister
IndexesConstDataSet1D_swigregister(IndexesConstDataSet1D)

class IndexesConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,2)> self) -> IndexesConstDataSet2D"""
        this = _RMF_HDF5.new_IndexesConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IndexesConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.IndexesConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(IndexesConstDataSet2D self, DataSetIndex2D ijk) -> Ints"""
        return _RMF_HDF5.IndexesConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(IndexesConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexesConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IndexesConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexesConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IndexesConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> IntsList"""
        return _RMF_HDF5.IndexesConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IndexesConstDataSet2D self, IndexesConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IndexesConstDataSet2D self, IndexesConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IndexesConstDataSet2D self, IndexesConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IndexesConstDataSet2D self, IndexesConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IndexesConstDataSet2D self, IndexesConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(IndexesConstDataSet2D self, IndexesConstDataSet2D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesConstDataSet2D
    __del__ = lambda self: None
IndexesConstDataSet2D_swigregister = _RMF_HDF5.IndexesConstDataSet2D_swigregister
IndexesConstDataSet2D_swigregister(IndexesConstDataSet2D)

class IndexesConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,3)> self) -> IndexesConstDataSet3D"""
        this = _RMF_HDF5.new_IndexesConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(IndexesConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.IndexesConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(IndexesConstDataSet3D self, DataSetIndex3D ijk) -> Ints"""
        return _RMF_HDF5.IndexesConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(IndexesConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexesConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IndexesConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexesConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(IndexesConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> IntsList"""
        return _RMF_HDF5.IndexesConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(IndexesConstDataSet3D self, IndexesConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(IndexesConstDataSet3D self, IndexesConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(IndexesConstDataSet3D self, IndexesConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(IndexesConstDataSet3D self, IndexesConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(IndexesConstDataSet3D self, IndexesConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(IndexesConstDataSet3D self, IndexesConstDataSet3D o) -> bool"""
        return _RMF_HDF5.IndexesConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesConstDataSet3D
    __del__ = lambda self: None
IndexesConstDataSet3D_swigregister = _RMF_HDF5.IndexesConstDataSet3D_swigregister
IndexesConstDataSet3D_swigregister(IndexesConstDataSet3D)

class IndexesDataSetAttributes1D(IndexesConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexesConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexesConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IndexesDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexesDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IndexesDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IndexesDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IndexesDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexesDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IndexesDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IndexesDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesDataSetAttributes1D
    __del__ = lambda self: None
IndexesDataSetAttributes1D_swigregister = _RMF_HDF5.IndexesDataSetAttributes1D_swigregister
IndexesDataSetAttributes1D_swigregister(IndexesDataSetAttributes1D)

class IndexesDataSetAttributes2D(IndexesConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexesConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexesConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IndexesDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexesDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IndexesDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IndexesDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IndexesDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexesDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IndexesDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IndexesDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesDataSetAttributes2D
    __del__ = lambda self: None
IndexesDataSetAttributes2D_swigregister = _RMF_HDF5.IndexesDataSetAttributes2D_swigregister
IndexesDataSetAttributes2D_swigregister(IndexesDataSetAttributes2D)

class IndexesDataSetAttributes3D(IndexesConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::IndexesTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexesConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexesConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(IndexesDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexesDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(IndexesDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.IndexesDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(IndexesDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.IndexesDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(IndexesDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.IndexesDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesDataSetAttributes3D
    __del__ = lambda self: None
IndexesDataSetAttributes3D_swigregister = _RMF_HDF5.IndexesDataSetAttributes3D_swigregister
IndexesDataSetAttributes3D_swigregister(IndexesDataSetAttributes3D)

class StringConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,1)> self) -> StringConstDataSet1D"""
        this = _RMF_HDF5.new_StringConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(StringConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.StringConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(StringConstDataSet1D self, DataSetIndex1D ijk) -> RMF::HDF5::StringTraits::Type"""
        return _RMF_HDF5.StringConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(StringConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(StringConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(StringConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> Strings"""
        return _RMF_HDF5.StringConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(StringConstDataSet1D self, StringConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(StringConstDataSet1D self, StringConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(StringConstDataSet1D self, StringConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(StringConstDataSet1D self, StringConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(StringConstDataSet1D self, StringConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(StringConstDataSet1D self, StringConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_StringConstDataSet1D
    __del__ = lambda self: None
StringConstDataSet1D_swigregister = _RMF_HDF5.StringConstDataSet1D_swigregister
StringConstDataSet1D_swigregister(StringConstDataSet1D)

class StringConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,2)> self) -> StringConstDataSet2D"""
        this = _RMF_HDF5.new_StringConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(StringConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.StringConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(StringConstDataSet2D self, DataSetIndex2D ijk) -> RMF::HDF5::StringTraits::Type"""
        return _RMF_HDF5.StringConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(StringConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(StringConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(StringConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> Strings"""
        return _RMF_HDF5.StringConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(StringConstDataSet2D self, StringConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(StringConstDataSet2D self, StringConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(StringConstDataSet2D self, StringConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(StringConstDataSet2D self, StringConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(StringConstDataSet2D self, StringConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(StringConstDataSet2D self, StringConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_StringConstDataSet2D
    __del__ = lambda self: None
StringConstDataSet2D_swigregister = _RMF_HDF5.StringConstDataSet2D_swigregister
StringConstDataSet2D_swigregister(StringConstDataSet2D)

class StringConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,3)> self) -> StringConstDataSet3D"""
        this = _RMF_HDF5.new_StringConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(StringConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.StringConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(StringConstDataSet3D self, DataSetIndex3D ijk) -> RMF::HDF5::StringTraits::Type"""
        return _RMF_HDF5.StringConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(StringConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(StringConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(StringConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> Strings"""
        return _RMF_HDF5.StringConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(StringConstDataSet3D self, StringConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(StringConstDataSet3D self, StringConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(StringConstDataSet3D self, StringConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(StringConstDataSet3D self, StringConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(StringConstDataSet3D self, StringConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(StringConstDataSet3D self, StringConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_StringConstDataSet3D
    __del__ = lambda self: None
StringConstDataSet3D_swigregister = _RMF_HDF5.StringConstDataSet3D_swigregister
StringConstDataSet3D_swigregister(StringConstDataSet3D)

class StringDataSetAttributes1D(StringConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [StringConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(StringDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(StringDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.StringDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(StringDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(StringDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.StringDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_StringDataSetAttributes1D
    __del__ = lambda self: None
StringDataSetAttributes1D_swigregister = _RMF_HDF5.StringDataSetAttributes1D_swigregister
StringDataSetAttributes1D_swigregister(StringDataSetAttributes1D)

class StringDataSetAttributes2D(StringConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [StringConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(StringDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(StringDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.StringDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(StringDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(StringDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.StringDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_StringDataSetAttributes2D
    __del__ = lambda self: None
StringDataSetAttributes2D_swigregister = _RMF_HDF5.StringDataSetAttributes2D_swigregister
StringDataSetAttributes2D_swigregister(StringDataSetAttributes2D)

class StringDataSetAttributes3D(StringConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [StringConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(StringDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(StringDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.StringDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(StringDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(StringDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.StringDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_StringDataSetAttributes3D
    __del__ = lambda self: None
StringDataSetAttributes3D_swigregister = _RMF_HDF5.StringDataSetAttributes3D_swigregister
StringDataSetAttributes3D_swigregister(StringDataSetAttributes3D)

class StringsConstDataSet1D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsConstDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsConstDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,1)> self) -> StringsConstDataSet1D"""
        this = _RMF_HDF5.new_StringsConstDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(StringsConstDataSet1D self) -> DataSetIndex1D"""
        return _RMF_HDF5.StringsConstDataSet1D_get_size(self)


    def get_value(self, ijk):
        """get_value(StringsConstDataSet1D self, DataSetIndex1D ijk) -> Strings"""
        return _RMF_HDF5.StringsConstDataSet1D_get_value(self, ijk)


    def __str__(self):
        """__str__(StringsConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringsConstDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(StringsConstDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringsConstDataSet1D___repr__(self)


    def get_block(self, lb, size):
        """get_block(StringsConstDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size) -> StringsList"""
        return _RMF_HDF5.StringsConstDataSet1D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(StringsConstDataSet1D self, StringsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet1D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(StringsConstDataSet1D self, StringsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet1D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(StringsConstDataSet1D self, StringsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet1D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(StringsConstDataSet1D self, StringsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet1D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(StringsConstDataSet1D self, StringsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet1D___ge__(self, o)


    def __le__(self, o):
        """__le__(StringsConstDataSet1D self, StringsConstDataSet1D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet1D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_StringsConstDataSet1D
    __del__ = lambda self: None
StringsConstDataSet1D_swigregister = _RMF_HDF5.StringsConstDataSet1D_swigregister
StringsConstDataSet1D_swigregister(StringsConstDataSet1D)

class StringsConstDataSet2D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsConstDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsConstDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,2)> self) -> StringsConstDataSet2D"""
        this = _RMF_HDF5.new_StringsConstDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(StringsConstDataSet2D self) -> DataSetIndex2D"""
        return _RMF_HDF5.StringsConstDataSet2D_get_size(self)


    def get_value(self, ijk):
        """get_value(StringsConstDataSet2D self, DataSetIndex2D ijk) -> Strings"""
        return _RMF_HDF5.StringsConstDataSet2D_get_value(self, ijk)


    def __str__(self):
        """__str__(StringsConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringsConstDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(StringsConstDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringsConstDataSet2D___repr__(self)


    def get_block(self, lb, size):
        """get_block(StringsConstDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size) -> StringsList"""
        return _RMF_HDF5.StringsConstDataSet2D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(StringsConstDataSet2D self, StringsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet2D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(StringsConstDataSet2D self, StringsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet2D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(StringsConstDataSet2D self, StringsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet2D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(StringsConstDataSet2D self, StringsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet2D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(StringsConstDataSet2D self, StringsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet2D___ge__(self, o)


    def __le__(self, o):
        """__le__(StringsConstDataSet2D self, StringsConstDataSet2D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet2D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_StringsConstDataSet2D
    __del__ = lambda self: None
StringsConstDataSet2D_swigregister = _RMF_HDF5.StringsConstDataSet2D_swigregister
StringsConstDataSet2D_swigregister(StringsConstDataSet2D)

class StringsConstDataSet3D(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsConstDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsConstDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,3)> self) -> StringsConstDataSet3D"""
        this = _RMF_HDF5.new_StringsConstDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_size(self):
        """get_size(StringsConstDataSet3D self) -> DataSetIndex3D"""
        return _RMF_HDF5.StringsConstDataSet3D_get_size(self)


    def get_value(self, ijk):
        """get_value(StringsConstDataSet3D self, DataSetIndex3D ijk) -> Strings"""
        return _RMF_HDF5.StringsConstDataSet3D_get_value(self, ijk)


    def __str__(self):
        """__str__(StringsConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringsConstDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(StringsConstDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringsConstDataSet3D___repr__(self)


    def get_block(self, lb, size):
        """get_block(StringsConstDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size) -> StringsList"""
        return _RMF_HDF5.StringsConstDataSet3D_get_block(self, lb, size)


    def __eq__(self, o):
        """__eq__(StringsConstDataSet3D self, StringsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet3D___eq__(self, o)


    def __ne__(self, o):
        """__ne__(StringsConstDataSet3D self, StringsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet3D___ne__(self, o)


    def __lt__(self, o):
        """__lt__(StringsConstDataSet3D self, StringsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet3D___lt__(self, o)


    def __gt__(self, o):
        """__gt__(StringsConstDataSet3D self, StringsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet3D___gt__(self, o)


    def __ge__(self, o):
        """__ge__(StringsConstDataSet3D self, StringsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet3D___ge__(self, o)


    def __le__(self, o):
        """__le__(StringsConstDataSet3D self, StringsConstDataSet3D o) -> bool"""
        return _RMF_HDF5.StringsConstDataSet3D___le__(self, o)

    __swig_destroy__ = _RMF_HDF5.delete_StringsConstDataSet3D
    __del__ = lambda self: None
StringsConstDataSet3D_swigregister = _RMF_HDF5.StringsConstDataSet3D_swigregister
StringsConstDataSet3D_swigregister(StringsConstDataSet3D)

class StringsDataSetAttributes1D(StringsConstDataSet1D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,1)>)> class."""

    __swig_setmethods__ = {}
    for _s in [StringsConstDataSet1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsDataSetAttributes1D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringsConstDataSet1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsDataSetAttributes1D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(StringsDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringsDataSetAttributes1D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(StringsDataSetAttributes1D self, std::string nm, Floats value)"""
        return _RMF_HDF5.StringsDataSetAttributes1D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(StringsDataSetAttributes1D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringsDataSetAttributes1D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(StringsDataSetAttributes1D self, std::string nm, std::string value)"""
        return _RMF_HDF5.StringsDataSetAttributes1D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_StringsDataSetAttributes1D
    __del__ = lambda self: None
StringsDataSetAttributes1D_swigregister = _RMF_HDF5.StringsDataSetAttributes1D_swigregister
StringsDataSetAttributes1D_swigregister(StringsDataSetAttributes1D)

class StringsDataSetAttributes2D(StringsConstDataSet2D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,2)>)> class."""

    __swig_setmethods__ = {}
    for _s in [StringsConstDataSet2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsDataSetAttributes2D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringsConstDataSet2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsDataSetAttributes2D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(StringsDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringsDataSetAttributes2D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(StringsDataSetAttributes2D self, std::string nm, Floats value)"""
        return _RMF_HDF5.StringsDataSetAttributes2D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(StringsDataSetAttributes2D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringsDataSetAttributes2D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(StringsDataSetAttributes2D self, std::string nm, std::string value)"""
        return _RMF_HDF5.StringsDataSetAttributes2D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_StringsDataSetAttributes2D
    __del__ = lambda self: None
StringsDataSetAttributes2D_swigregister = _RMF_HDF5.StringsDataSetAttributes2D_swigregister
StringsDataSetAttributes2D_swigregister(StringsDataSetAttributes2D)

class StringsDataSetAttributes3D(StringsConstDataSet3D):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstDataSetD<(RMF::HDF5::StringsTraits,3)>)> class."""

    __swig_setmethods__ = {}
    for _s in [StringsConstDataSet3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsDataSetAttributes3D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringsConstDataSet3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsDataSetAttributes3D, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(StringsDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringsDataSetAttributes3D_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(StringsDataSetAttributes3D self, std::string nm, Floats value)"""
        return _RMF_HDF5.StringsDataSetAttributes3D_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(StringsDataSetAttributes3D self, std::string nm, Ints value)"""
        return _RMF_HDF5.StringsDataSetAttributes3D_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(StringsDataSetAttributes3D self, std::string nm, std::string value)"""
        return _RMF_HDF5.StringsDataSetAttributes3D_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete_StringsDataSetAttributes3D
    __del__ = lambda self: None
StringsDataSetAttributes3D_swigregister = _RMF_HDF5.StringsDataSetAttributes3D_swigregister
StringsDataSetAttributes3D_swigregister(StringsDataSetAttributes3D)

class IntDataSet1D(IntDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IntTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [IntDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IntTraits,1)> self) -> IntDataSet1D"""
        this = _RMF_HDF5.new_IntDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IntDataSet1D self, DataSetIndex1D ijk, RMF::HDF5::IntTraits::Type value)"""
        return _RMF_HDF5.IntDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IntDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IntDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IntDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, Ints value)"""
        return _RMF_HDF5.IntDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IntDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.IntDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IntDataSet1D
    __del__ = lambda self: None
IntDataSet1D_swigregister = _RMF_HDF5.IntDataSet1D_swigregister
IntDataSet1D_swigregister(IntDataSet1D)

class IntDataSet2D(IntDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IntTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [IntDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IntTraits,2)> self) -> IntDataSet2D"""
        this = _RMF_HDF5.new_IntDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IntDataSet2D self, DataSetIndex2D ijk, RMF::HDF5::IntTraits::Type value)"""
        return _RMF_HDF5.IntDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IntDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IntDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IntDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, Ints value)"""
        return _RMF_HDF5.IntDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IntDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.IntDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IntDataSet2D
    __del__ = lambda self: None
IntDataSet2D_swigregister = _RMF_HDF5.IntDataSet2D_swigregister
IntDataSet2D_swigregister(IntDataSet2D)

class IntDataSet3D(IntDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IntTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [IntDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IntTraits,3)> self) -> IntDataSet3D"""
        this = _RMF_HDF5.new_IntDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IntDataSet3D self, DataSetIndex3D ijk, RMF::HDF5::IntTraits::Type value)"""
        return _RMF_HDF5.IntDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IntDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IntDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IntDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, Ints value)"""
        return _RMF_HDF5.IntDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IntDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.IntDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IntDataSet3D
    __del__ = lambda self: None
IntDataSet3D_swigregister = _RMF_HDF5.IntDataSet3D_swigregister
IntDataSet3D_swigregister(IntDataSet3D)

class IntsDataSet1D(IntsDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IntsTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [IntsDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntsDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IntsTraits,1)> self) -> IntsDataSet1D"""
        this = _RMF_HDF5.new_IntsDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IntsDataSet1D self, DataSetIndex1D ijk, Ints value)"""
        return _RMF_HDF5.IntsDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IntsDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntsDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IntsDataSet1D self) -> std::string"""
        return _RMF_HDF5.IntsDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IntsDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, IntsList value)"""
        return _RMF_HDF5.IntsDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IntsDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.IntsDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IntsDataSet1D
    __del__ = lambda self: None
IntsDataSet1D_swigregister = _RMF_HDF5.IntsDataSet1D_swigregister
IntsDataSet1D_swigregister(IntsDataSet1D)

class IntsDataSet2D(IntsDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IntsTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [IntsDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntsDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IntsTraits,2)> self) -> IntsDataSet2D"""
        this = _RMF_HDF5.new_IntsDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IntsDataSet2D self, DataSetIndex2D ijk, Ints value)"""
        return _RMF_HDF5.IntsDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IntsDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntsDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IntsDataSet2D self) -> std::string"""
        return _RMF_HDF5.IntsDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IntsDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, IntsList value)"""
        return _RMF_HDF5.IntsDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IntsDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.IntsDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IntsDataSet2D
    __del__ = lambda self: None
IntsDataSet2D_swigregister = _RMF_HDF5.IntsDataSet2D_swigregister
IntsDataSet2D_swigregister(IntsDataSet2D)

class IntsDataSet3D(IntsDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IntsTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [IntsDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntsDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IntsDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IntsDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IntsTraits,3)> self) -> IntsDataSet3D"""
        this = _RMF_HDF5.new_IntsDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IntsDataSet3D self, DataSetIndex3D ijk, Ints value)"""
        return _RMF_HDF5.IntsDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IntsDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntsDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IntsDataSet3D self) -> std::string"""
        return _RMF_HDF5.IntsDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IntsDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, IntsList value)"""
        return _RMF_HDF5.IntsDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IntsDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.IntsDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IntsDataSet3D
    __del__ = lambda self: None
IntsDataSet3D_swigregister = _RMF_HDF5.IntsDataSet3D_swigregister
IntsDataSet3D_swigregister(IntsDataSet3D)

class FloatDataSet1D(FloatDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::FloatTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::FloatTraits,1)> self) -> FloatDataSet1D"""
        this = _RMF_HDF5.new_FloatDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(FloatDataSet1D self, DataSetIndex1D ijk, RMF::HDF5::FloatTraits::Type value)"""
        return _RMF_HDF5.FloatDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(FloatDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(FloatDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(FloatDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, Floats value)"""
        return _RMF_HDF5.FloatDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(FloatDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.FloatDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_FloatDataSet1D
    __del__ = lambda self: None
FloatDataSet1D_swigregister = _RMF_HDF5.FloatDataSet1D_swigregister
FloatDataSet1D_swigregister(FloatDataSet1D)

class FloatDataSet2D(FloatDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::FloatTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::FloatTraits,2)> self) -> FloatDataSet2D"""
        this = _RMF_HDF5.new_FloatDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(FloatDataSet2D self, DataSetIndex2D ijk, RMF::HDF5::FloatTraits::Type value)"""
        return _RMF_HDF5.FloatDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(FloatDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(FloatDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(FloatDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, Floats value)"""
        return _RMF_HDF5.FloatDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(FloatDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.FloatDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_FloatDataSet2D
    __del__ = lambda self: None
FloatDataSet2D_swigregister = _RMF_HDF5.FloatDataSet2D_swigregister
FloatDataSet2D_swigregister(FloatDataSet2D)

class FloatDataSet3D(FloatDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::FloatTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::FloatTraits,3)> self) -> FloatDataSet3D"""
        this = _RMF_HDF5.new_FloatDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(FloatDataSet3D self, DataSetIndex3D ijk, RMF::HDF5::FloatTraits::Type value)"""
        return _RMF_HDF5.FloatDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(FloatDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(FloatDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(FloatDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, Floats value)"""
        return _RMF_HDF5.FloatDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(FloatDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.FloatDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_FloatDataSet3D
    __del__ = lambda self: None
FloatDataSet3D_swigregister = _RMF_HDF5.FloatDataSet3D_swigregister
FloatDataSet3D_swigregister(FloatDataSet3D)

class FloatsDataSet1D(FloatsDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::FloatsTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatsDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatsDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::FloatsTraits,1)> self) -> FloatsDataSet1D"""
        this = _RMF_HDF5.new_FloatsDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(FloatsDataSet1D self, DataSetIndex1D ijk, Floats value)"""
        return _RMF_HDF5.FloatsDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(FloatsDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatsDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(FloatsDataSet1D self) -> std::string"""
        return _RMF_HDF5.FloatsDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(FloatsDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, FloatsList value)"""
        return _RMF_HDF5.FloatsDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(FloatsDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.FloatsDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsDataSet1D
    __del__ = lambda self: None
FloatsDataSet1D_swigregister = _RMF_HDF5.FloatsDataSet1D_swigregister
FloatsDataSet1D_swigregister(FloatsDataSet1D)

class FloatsDataSet2D(FloatsDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::FloatsTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatsDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatsDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::FloatsTraits,2)> self) -> FloatsDataSet2D"""
        this = _RMF_HDF5.new_FloatsDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(FloatsDataSet2D self, DataSetIndex2D ijk, Floats value)"""
        return _RMF_HDF5.FloatsDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(FloatsDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatsDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(FloatsDataSet2D self) -> std::string"""
        return _RMF_HDF5.FloatsDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(FloatsDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, FloatsList value)"""
        return _RMF_HDF5.FloatsDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(FloatsDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.FloatsDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsDataSet2D
    __del__ = lambda self: None
FloatsDataSet2D_swigregister = _RMF_HDF5.FloatsDataSet2D_swigregister
FloatsDataSet2D_swigregister(FloatsDataSet2D)

class FloatsDataSet3D(FloatsDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::FloatsTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [FloatsDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatsDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [FloatsDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FloatsDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::FloatsTraits,3)> self) -> FloatsDataSet3D"""
        this = _RMF_HDF5.new_FloatsDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(FloatsDataSet3D self, DataSetIndex3D ijk, Floats value)"""
        return _RMF_HDF5.FloatsDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(FloatsDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatsDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(FloatsDataSet3D self) -> std::string"""
        return _RMF_HDF5.FloatsDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(FloatsDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, FloatsList value)"""
        return _RMF_HDF5.FloatsDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(FloatsDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.FloatsDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_FloatsDataSet3D
    __del__ = lambda self: None
FloatsDataSet3D_swigregister = _RMF_HDF5.FloatsDataSet3D_swigregister
FloatsDataSet3D_swigregister(FloatsDataSet3D)

class IndexDataSet1D(IndexDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IndexTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IndexTraits,1)> self) -> IndexDataSet1D"""
        this = _RMF_HDF5.new_IndexDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IndexDataSet1D self, DataSetIndex1D ijk, RMF::HDF5::IndexTraits::Type value)"""
        return _RMF_HDF5.IndexDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IndexDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IndexDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IndexDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, Ints value)"""
        return _RMF_HDF5.IndexDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IndexDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.IndexDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IndexDataSet1D
    __del__ = lambda self: None
IndexDataSet1D_swigregister = _RMF_HDF5.IndexDataSet1D_swigregister
IndexDataSet1D_swigregister(IndexDataSet1D)

class IndexDataSet2D(IndexDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IndexTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IndexTraits,2)> self) -> IndexDataSet2D"""
        this = _RMF_HDF5.new_IndexDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IndexDataSet2D self, DataSetIndex2D ijk, RMF::HDF5::IndexTraits::Type value)"""
        return _RMF_HDF5.IndexDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IndexDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IndexDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IndexDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, Ints value)"""
        return _RMF_HDF5.IndexDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IndexDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.IndexDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IndexDataSet2D
    __del__ = lambda self: None
IndexDataSet2D_swigregister = _RMF_HDF5.IndexDataSet2D_swigregister
IndexDataSet2D_swigregister(IndexDataSet2D)

class IndexDataSet3D(IndexDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IndexTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IndexTraits,3)> self) -> IndexDataSet3D"""
        this = _RMF_HDF5.new_IndexDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IndexDataSet3D self, DataSetIndex3D ijk, RMF::HDF5::IndexTraits::Type value)"""
        return _RMF_HDF5.IndexDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IndexDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IndexDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IndexDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, Ints value)"""
        return _RMF_HDF5.IndexDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IndexDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.IndexDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IndexDataSet3D
    __del__ = lambda self: None
IndexDataSet3D_swigregister = _RMF_HDF5.IndexDataSet3D_swigregister
IndexDataSet3D_swigregister(IndexDataSet3D)

class IndexesDataSet1D(IndexesDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IndexesTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexesDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexesDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IndexesTraits,1)> self) -> IndexesDataSet1D"""
        this = _RMF_HDF5.new_IndexesDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IndexesDataSet1D self, DataSetIndex1D ijk, Ints value)"""
        return _RMF_HDF5.IndexesDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IndexesDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexesDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(IndexesDataSet1D self) -> std::string"""
        return _RMF_HDF5.IndexesDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IndexesDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, IntsList value)"""
        return _RMF_HDF5.IndexesDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IndexesDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.IndexesDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesDataSet1D
    __del__ = lambda self: None
IndexesDataSet1D_swigregister = _RMF_HDF5.IndexesDataSet1D_swigregister
IndexesDataSet1D_swigregister(IndexesDataSet1D)

class IndexesDataSet2D(IndexesDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IndexesTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexesDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexesDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IndexesTraits,2)> self) -> IndexesDataSet2D"""
        this = _RMF_HDF5.new_IndexesDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IndexesDataSet2D self, DataSetIndex2D ijk, Ints value)"""
        return _RMF_HDF5.IndexesDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IndexesDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexesDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(IndexesDataSet2D self) -> std::string"""
        return _RMF_HDF5.IndexesDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IndexesDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, IntsList value)"""
        return _RMF_HDF5.IndexesDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IndexesDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.IndexesDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesDataSet2D
    __del__ = lambda self: None
IndexesDataSet2D_swigregister = _RMF_HDF5.IndexesDataSet2D_swigregister
IndexesDataSet2D_swigregister(IndexesDataSet2D)

class IndexesDataSet3D(IndexesDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::IndexesTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [IndexesDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IndexesDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [IndexesDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IndexesDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::IndexesTraits,3)> self) -> IndexesDataSet3D"""
        this = _RMF_HDF5.new_IndexesDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(IndexesDataSet3D self, DataSetIndex3D ijk, Ints value)"""
        return _RMF_HDF5.IndexesDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(IndexesDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexesDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(IndexesDataSet3D self) -> std::string"""
        return _RMF_HDF5.IndexesDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(IndexesDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, IntsList value)"""
        return _RMF_HDF5.IndexesDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(IndexesDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.IndexesDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_IndexesDataSet3D
    __del__ = lambda self: None
IndexesDataSet3D_swigregister = _RMF_HDF5.IndexesDataSet3D_swigregister
IndexesDataSet3D_swigregister(IndexesDataSet3D)

class StringDataSet1D(StringDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::StringTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [StringDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::StringTraits,1)> self) -> StringDataSet1D"""
        this = _RMF_HDF5.new_StringDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(StringDataSet1D self, DataSetIndex1D ijk, RMF::HDF5::StringTraits::Type value)"""
        return _RMF_HDF5.StringDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(StringDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(StringDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(StringDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, Strings value)"""
        return _RMF_HDF5.StringDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(StringDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.StringDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_StringDataSet1D
    __del__ = lambda self: None
StringDataSet1D_swigregister = _RMF_HDF5.StringDataSet1D_swigregister
StringDataSet1D_swigregister(StringDataSet1D)

class StringDataSet2D(StringDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::StringTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [StringDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::StringTraits,2)> self) -> StringDataSet2D"""
        this = _RMF_HDF5.new_StringDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(StringDataSet2D self, DataSetIndex2D ijk, RMF::HDF5::StringTraits::Type value)"""
        return _RMF_HDF5.StringDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(StringDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(StringDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(StringDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, Strings value)"""
        return _RMF_HDF5.StringDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(StringDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.StringDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_StringDataSet2D
    __del__ = lambda self: None
StringDataSet2D_swigregister = _RMF_HDF5.StringDataSet2D_swigregister
StringDataSet2D_swigregister(StringDataSet2D)

class StringDataSet3D(StringDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::StringTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [StringDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::StringTraits,3)> self) -> StringDataSet3D"""
        this = _RMF_HDF5.new_StringDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(StringDataSet3D self, DataSetIndex3D ijk, RMF::HDF5::StringTraits::Type value)"""
        return _RMF_HDF5.StringDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(StringDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(StringDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(StringDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, Strings value)"""
        return _RMF_HDF5.StringDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(StringDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.StringDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_StringDataSet3D
    __del__ = lambda self: None
StringDataSet3D_swigregister = _RMF_HDF5.StringDataSet3D_swigregister
StringDataSet3D_swigregister(StringDataSet3D)

class StringsDataSet1D(StringsDataSetAttributes1D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::StringsTraits,1)> class."""

    __swig_setmethods__ = {}
    for _s in [StringsDataSetAttributes1D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsDataSet1D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringsDataSetAttributes1D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsDataSet1D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::StringsTraits,1)> self) -> StringsDataSet1D"""
        this = _RMF_HDF5.new_StringsDataSet1D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(StringsDataSet1D self, DataSetIndex1D ijk, Strings value)"""
        return _RMF_HDF5.StringsDataSet1D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(StringsDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringsDataSet1D___str__(self)


    def __repr__(self):
        """__repr__(StringsDataSet1D self) -> std::string"""
        return _RMF_HDF5.StringsDataSet1D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(StringsDataSet1D self, DataSetIndex1D lb, DataSetIndex1D size, StringsList value)"""
        return _RMF_HDF5.StringsDataSet1D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(StringsDataSet1D self, DataSetIndex1D ijk)"""
        return _RMF_HDF5.StringsDataSet1D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_StringsDataSet1D
    __del__ = lambda self: None
StringsDataSet1D_swigregister = _RMF_HDF5.StringsDataSet1D_swigregister
StringsDataSet1D_swigregister(StringsDataSet1D)

class StringsDataSet2D(StringsDataSetAttributes2D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::StringsTraits,2)> class."""

    __swig_setmethods__ = {}
    for _s in [StringsDataSetAttributes2D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsDataSet2D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringsDataSetAttributes2D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsDataSet2D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::StringsTraits,2)> self) -> StringsDataSet2D"""
        this = _RMF_HDF5.new_StringsDataSet2D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(StringsDataSet2D self, DataSetIndex2D ijk, Strings value)"""
        return _RMF_HDF5.StringsDataSet2D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(StringsDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringsDataSet2D___str__(self)


    def __repr__(self):
        """__repr__(StringsDataSet2D self) -> std::string"""
        return _RMF_HDF5.StringsDataSet2D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(StringsDataSet2D self, DataSetIndex2D lb, DataSetIndex2D size, StringsList value)"""
        return _RMF_HDF5.StringsDataSet2D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(StringsDataSet2D self, DataSetIndex2D ijk)"""
        return _RMF_HDF5.StringsDataSet2D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_StringsDataSet2D
    __del__ = lambda self: None
StringsDataSet2D_swigregister = _RMF_HDF5.StringsDataSet2D_swigregister
StringsDataSet2D_swigregister(StringsDataSet2D)

class StringsDataSet3D(StringsDataSetAttributes3D):
    """Proxy of C++ RMF::HDF5::DataSetD<(RMF::HDF5::StringsTraits,3)> class."""

    __swig_setmethods__ = {}
    for _s in [StringsDataSetAttributes3D]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringsDataSet3D, name, value)
    __swig_getmethods__ = {}
    for _s in [StringsDataSetAttributes3D]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, StringsDataSet3D, name)

    def __init__(self):
        """__init__(RMF::HDF5::DataSetD<(RMF::HDF5::StringsTraits,3)> self) -> StringsDataSet3D"""
        this = _RMF_HDF5.new_StringsDataSet3D()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set_value(self, ijk, value):
        """set_value(StringsDataSet3D self, DataSetIndex3D ijk, Strings value)"""
        return _RMF_HDF5.StringsDataSet3D_set_value(self, ijk, value)


    def __str__(self):
        """__str__(StringsDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringsDataSet3D___str__(self)


    def __repr__(self):
        """__repr__(StringsDataSet3D self) -> std::string"""
        return _RMF_HDF5.StringsDataSet3D___repr__(self)


    def set_block(self, lb, size, value):
        """set_block(StringsDataSet3D self, DataSetIndex3D lb, DataSetIndex3D size, StringsList value)"""
        return _RMF_HDF5.StringsDataSet3D_set_block(self, lb, size, value)


    def set_size(self, ijk):
        """set_size(StringsDataSet3D self, DataSetIndex3D ijk)"""
        return _RMF_HDF5.StringsDataSet3D_set_size(self, ijk)

    __swig_destroy__ = _RMF_HDF5.delete_StringsDataSet3D
    __del__ = lambda self: None
StringsDataSet3D_swigregister = _RMF_HDF5.StringsDataSet3D_swigregister
StringsDataSet3D_swigregister(StringsDataSet3D)

class ConstGroup(_ConstAttributesObject):
    """Proxy of C++ RMF::HDF5::ConstGroup class."""

    __swig_setmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConstGroup, name, value)
    __swig_getmethods__ = {}
    for _s in [_ConstAttributesObject]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ConstGroup, name)

    def __str__(self):
        """__str__(ConstGroup self) -> std::string"""
        return _RMF_HDF5.ConstGroup___str__(self)


    def __repr__(self):
        """__repr__(ConstGroup self) -> std::string"""
        return _RMF_HDF5.ConstGroup___repr__(self)


    def __init__(self, *args):
        """
        __init__(RMF::HDF5::ConstGroup self) -> ConstGroup
        __init__(RMF::HDF5::ConstGroup self, ConstGroup parent, std::string name) -> ConstGroup
        """
        this = _RMF_HDF5.new_ConstGroup(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_child_int_data_set_1d(self, *args):
        """
        get_child_int_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntTraits,1 > props) -> IntConstDataSet1D
        get_child_int_data_set_1d(ConstGroup self, std::string name) -> IntConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_int_data_set_1d(self, *args)


    def get_child_int_data_set_2d(self, *args):
        """
        get_child_int_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntTraits,2 > props) -> IntConstDataSet2D
        get_child_int_data_set_2d(ConstGroup self, std::string name) -> IntConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_int_data_set_2d(self, *args)


    def get_child_int_data_set_3d(self, *args):
        """
        get_child_int_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntTraits,3 > props) -> IntConstDataSet3D
        get_child_int_data_set_3d(ConstGroup self, std::string name) -> IntConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_int_data_set_3d(self, *args)


    def get_child_float_data_set_1d(self, *args):
        """
        get_child_float_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatTraits,1 > props) -> FloatConstDataSet1D
        get_child_float_data_set_1d(ConstGroup self, std::string name) -> FloatConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_float_data_set_1d(self, *args)


    def get_child_float_data_set_2d(self, *args):
        """
        get_child_float_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatTraits,2 > props) -> FloatConstDataSet2D
        get_child_float_data_set_2d(ConstGroup self, std::string name) -> FloatConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_float_data_set_2d(self, *args)


    def get_child_float_data_set_3d(self, *args):
        """
        get_child_float_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatTraits,3 > props) -> FloatConstDataSet3D
        get_child_float_data_set_3d(ConstGroup self, std::string name) -> FloatConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_float_data_set_3d(self, *args)


    def get_child_index_data_set_1d(self, *args):
        """
        get_child_index_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexTraits,1 > props) -> IndexConstDataSet1D
        get_child_index_data_set_1d(ConstGroup self, std::string name) -> IndexConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_index_data_set_1d(self, *args)


    def get_child_index_data_set_2d(self, *args):
        """
        get_child_index_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexTraits,2 > props) -> IndexConstDataSet2D
        get_child_index_data_set_2d(ConstGroup self, std::string name) -> IndexConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_index_data_set_2d(self, *args)


    def get_child_index_data_set_3d(self, *args):
        """
        get_child_index_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexTraits,3 > props) -> IndexConstDataSet3D
        get_child_index_data_set_3d(ConstGroup self, std::string name) -> IndexConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_index_data_set_3d(self, *args)


    def get_child_string_data_set_1d(self, *args):
        """
        get_child_string_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringTraits,1 > props) -> StringConstDataSet1D
        get_child_string_data_set_1d(ConstGroup self, std::string name) -> StringConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_string_data_set_1d(self, *args)


    def get_child_string_data_set_2d(self, *args):
        """
        get_child_string_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringTraits,2 > props) -> StringConstDataSet2D
        get_child_string_data_set_2d(ConstGroup self, std::string name) -> StringConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_string_data_set_2d(self, *args)


    def get_child_string_data_set_3d(self, *args):
        """
        get_child_string_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringTraits,3 > props) -> StringConstDataSet3D
        get_child_string_data_set_3d(ConstGroup self, std::string name) -> StringConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_string_data_set_3d(self, *args)


    def get_child_strings_data_set_1d(self, *args):
        """
        get_child_strings_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringsTraits,1 > props) -> StringsConstDataSet1D
        get_child_strings_data_set_1d(ConstGroup self, std::string name) -> StringsConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_strings_data_set_1d(self, *args)


    def get_child_strings_data_set_2d(self, *args):
        """
        get_child_strings_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringsTraits,2 > props) -> StringsConstDataSet2D
        get_child_strings_data_set_2d(ConstGroup self, std::string name) -> StringsConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_strings_data_set_2d(self, *args)


    def get_child_strings_data_set_3d(self, *args):
        """
        get_child_strings_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringsTraits,3 > props) -> StringsConstDataSet3D
        get_child_strings_data_set_3d(ConstGroup self, std::string name) -> StringsConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_strings_data_set_3d(self, *args)


    def get_child_floats_data_set_1d(self, *args):
        """
        get_child_floats_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatsTraits,1 > props) -> FloatsConstDataSet1D
        get_child_floats_data_set_1d(ConstGroup self, std::string name) -> FloatsConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_floats_data_set_1d(self, *args)


    def get_child_floats_data_set_2d(self, *args):
        """
        get_child_floats_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatsTraits,2 > props) -> FloatsConstDataSet2D
        get_child_floats_data_set_2d(ConstGroup self, std::string name) -> FloatsConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_floats_data_set_2d(self, *args)


    def get_child_floats_data_set_3d(self, *args):
        """
        get_child_floats_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatsTraits,3 > props) -> FloatsConstDataSet3D
        get_child_floats_data_set_3d(ConstGroup self, std::string name) -> FloatsConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_floats_data_set_3d(self, *args)


    def get_child_ints_data_set_1d(self, *args):
        """
        get_child_ints_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntsTraits,1 > props) -> IntsConstDataSet1D
        get_child_ints_data_set_1d(ConstGroup self, std::string name) -> IntsConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_ints_data_set_1d(self, *args)


    def get_child_ints_data_set_2d(self, *args):
        """
        get_child_ints_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntsTraits,2 > props) -> IntsConstDataSet2D
        get_child_ints_data_set_2d(ConstGroup self, std::string name) -> IntsConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_ints_data_set_2d(self, *args)


    def get_child_ints_data_set_3d(self, *args):
        """
        get_child_ints_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntsTraits,3 > props) -> IntsConstDataSet3D
        get_child_ints_data_set_3d(ConstGroup self, std::string name) -> IntsConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_ints_data_set_3d(self, *args)


    def get_child_indexes_data_set_1d(self, *args):
        """
        get_child_indexes_data_set_1d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexesTraits,1 > props) -> IndexesConstDataSet1D
        get_child_indexes_data_set_1d(ConstGroup self, std::string name) -> IndexesConstDataSet1D
        """
        return _RMF_HDF5.ConstGroup_get_child_indexes_data_set_1d(self, *args)


    def get_child_indexes_data_set_2d(self, *args):
        """
        get_child_indexes_data_set_2d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexesTraits,2 > props) -> IndexesConstDataSet2D
        get_child_indexes_data_set_2d(ConstGroup self, std::string name) -> IndexesConstDataSet2D
        """
        return _RMF_HDF5.ConstGroup_get_child_indexes_data_set_2d(self, *args)


    def get_child_indexes_data_set_3d(self, *args):
        """
        get_child_indexes_data_set_3d(ConstGroup self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexesTraits,3 > props) -> IndexesConstDataSet3D
        get_child_indexes_data_set_3d(ConstGroup self, std::string name) -> IndexesConstDataSet3D
        """
        return _RMF_HDF5.ConstGroup_get_child_indexes_data_set_3d(self, *args)


    def get_number_of_children(self):
        """get_number_of_children(ConstGroup self) -> unsigned int"""
        return _RMF_HDF5.ConstGroup_get_number_of_children(self)


    def get_child_name(self, i):
        """get_child_name(ConstGroup self, unsigned int i) -> std::string"""
        return _RMF_HDF5.ConstGroup_get_child_name(self, i)


    def get_has_child(self, name):
        """get_has_child(ConstGroup self, std::string name) -> bool"""
        return _RMF_HDF5.ConstGroup_get_has_child(self, name)


    def get_child_is_data_set(self, i):
        """get_child_is_data_set(ConstGroup self, unsigned int i) -> bool"""
        return _RMF_HDF5.ConstGroup_get_child_is_data_set(self, i)


    def get_child_group(self, *args):
        """
        get_child_group(ConstGroup self, unsigned int i) -> ConstGroup
        get_child_group(ConstGroup self, std::string name) -> ConstGroup
        """
        return _RMF_HDF5.ConstGroup_get_child_group(self, *args)


    def get_child_is_group(self, *args):
        """
        get_child_is_group(ConstGroup self, unsigned int i) -> bool
        get_child_is_group(ConstGroup self, std::string name) -> bool
        """
        return _RMF_HDF5.ConstGroup_get_child_is_group(self, *args)

    __swig_destroy__ = _RMF_HDF5.delete_ConstGroup
    __del__ = lambda self: None
ConstGroup_swigregister = _RMF_HDF5.ConstGroup_swigregister
ConstGroup_swigregister(ConstGroup)

class _HDF5MutableAttributesGroup(ConstGroup):
    """Proxy of C++ RMF::HDF5::MutableAttributes<(RMF::HDF5::ConstGroup)> class."""

    __swig_setmethods__ = {}
    for _s in [ConstGroup]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, _HDF5MutableAttributesGroup, name, value)
    __swig_getmethods__ = {}
    for _s in [ConstGroup]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, _HDF5MutableAttributesGroup, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def set_int_attribute(self, nm, value):
        """set_int_attribute(_HDF5MutableAttributesGroup self, std::string nm, Ints value)"""
        return _RMF_HDF5._HDF5MutableAttributesGroup_set_int_attribute(self, nm, value)


    def set_float_attribute(self, nm, value):
        """set_float_attribute(_HDF5MutableAttributesGroup self, std::string nm, Floats value)"""
        return _RMF_HDF5._HDF5MutableAttributesGroup_set_float_attribute(self, nm, value)


    def set_index_attribute(self, nm, value):
        """set_index_attribute(_HDF5MutableAttributesGroup self, std::string nm, Ints value)"""
        return _RMF_HDF5._HDF5MutableAttributesGroup_set_index_attribute(self, nm, value)


    def set_char_attribute(self, nm, value):
        """set_char_attribute(_HDF5MutableAttributesGroup self, std::string nm, std::string value)"""
        return _RMF_HDF5._HDF5MutableAttributesGroup_set_char_attribute(self, nm, value)

    __swig_destroy__ = _RMF_HDF5.delete__HDF5MutableAttributesGroup
    __del__ = lambda self: None
_HDF5MutableAttributesGroup_swigregister = _RMF_HDF5._HDF5MutableAttributesGroup_swigregister
_HDF5MutableAttributesGroup_swigregister(_HDF5MutableAttributesGroup)

class ConstFile(ConstGroup):
    """Proxy of C++ RMF::HDF5::ConstFile class."""

    __swig_setmethods__ = {}
    for _s in [ConstGroup]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConstFile, name, value)
    __swig_getmethods__ = {}
    for _s in [ConstGroup]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ConstFile, name)

    def __init__(self, *args):
        """
        __init__(RMF::HDF5::ConstFile self, File f) -> ConstFile
        __init__(RMF::HDF5::ConstFile self) -> ConstFile
        """
        this = _RMF_HDF5.new_ConstFile(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __str__(self):
        """__str__(ConstFile self) -> std::string"""
        return _RMF_HDF5.ConstFile___str__(self)


    def __repr__(self):
        """__repr__(ConstFile self) -> std::string"""
        return _RMF_HDF5.ConstFile___repr__(self)


    def get_name(self):
        """get_name(ConstFile self) -> std::string"""
        return _RMF_HDF5.ConstFile_get_name(self)

    __swig_destroy__ = _RMF_HDF5.delete_ConstFile
    __del__ = lambda self: None
ConstFile_swigregister = _RMF_HDF5.ConstFile_swigregister
ConstFile_swigregister(ConstFile)


def open_file_read_only(name):
    """open_file_read_only(std::string name) -> ConstFile"""
    return _RMF_HDF5.open_file_read_only(name)

def get_number_of_open_handles(*args):
    """
    get_number_of_open_handles(ConstFile f) -> int
    get_number_of_open_handles() -> int
    """
    return _RMF_HDF5.get_number_of_open_handles(*args)

def get_open_handle_names(*args):
    """
    get_open_handle_names(ConstFile f) -> Strings
    get_open_handle_names() -> Strings
    """
    return _RMF_HDF5.get_open_handle_names(*args)

def set_show_errors(tf):
    """set_show_errors(bool tf)"""
    return _RMF_HDF5.set_show_errors(tf)
class Group(_HDF5MutableAttributesGroup):
    """Proxy of C++ RMF::HDF5::Group class."""

    __swig_setmethods__ = {}
    for _s in [_HDF5MutableAttributesGroup]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Group, name, value)
    __swig_getmethods__ = {}
    for _s in [_HDF5MutableAttributesGroup]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Group, name)

    def __str__(self):
        """__str__(Group self) -> std::string"""
        return _RMF_HDF5.Group___str__(self)


    def __repr__(self):
        """__repr__(Group self) -> std::string"""
        return _RMF_HDF5.Group___repr__(self)


    def __init__(self, *args):
        """
        __init__(RMF::HDF5::Group self) -> Group
        __init__(RMF::HDF5::Group self, Group parent, std::string name) -> Group
        """
        this = _RMF_HDF5.new_Group(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def add_child_group(self, name):
        """add_child_group(Group self, std::string name) -> Group"""
        return _RMF_HDF5.Group_add_child_group(self, name)


    def get_child_int_data_set_1d(self, *args):
        """
        get_child_int_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntTraits,1 > props) -> IntDataSet1D
        get_child_int_data_set_1d(Group self, std::string name) -> IntDataSet1D
        """
        return _RMF_HDF5.Group_get_child_int_data_set_1d(self, *args)


    def add_child_int_data_set_1d(self, *args):
        """
        add_child_int_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IntTraits,1 > props) -> IntDataSet1D
        add_child_int_data_set_1d(Group self, std::string name) -> IntDataSet1D
        """
        return _RMF_HDF5.Group_add_child_int_data_set_1d(self, *args)


    def get_child_int_data_set_2d(self, *args):
        """
        get_child_int_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntTraits,2 > props) -> IntDataSet2D
        get_child_int_data_set_2d(Group self, std::string name) -> IntDataSet2D
        """
        return _RMF_HDF5.Group_get_child_int_data_set_2d(self, *args)


    def add_child_int_data_set_2d(self, *args):
        """
        add_child_int_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IntTraits,2 > props) -> IntDataSet2D
        add_child_int_data_set_2d(Group self, std::string name) -> IntDataSet2D
        """
        return _RMF_HDF5.Group_add_child_int_data_set_2d(self, *args)


    def get_child_int_data_set_3d(self, *args):
        """
        get_child_int_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntTraits,3 > props) -> IntDataSet3D
        get_child_int_data_set_3d(Group self, std::string name) -> IntDataSet3D
        """
        return _RMF_HDF5.Group_get_child_int_data_set_3d(self, *args)


    def add_child_int_data_set_3d(self, *args):
        """
        add_child_int_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IntTraits,3 > props) -> IntDataSet3D
        add_child_int_data_set_3d(Group self, std::string name) -> IntDataSet3D
        """
        return _RMF_HDF5.Group_add_child_int_data_set_3d(self, *args)


    def get_child_float_data_set_1d(self, *args):
        """
        get_child_float_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatTraits,1 > props) -> FloatDataSet1D
        get_child_float_data_set_1d(Group self, std::string name) -> FloatDataSet1D
        """
        return _RMF_HDF5.Group_get_child_float_data_set_1d(self, *args)


    def add_child_float_data_set_1d(self, *args):
        """
        add_child_float_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::FloatTraits,1 > props) -> FloatDataSet1D
        add_child_float_data_set_1d(Group self, std::string name) -> FloatDataSet1D
        """
        return _RMF_HDF5.Group_add_child_float_data_set_1d(self, *args)


    def get_child_float_data_set_2d(self, *args):
        """
        get_child_float_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatTraits,2 > props) -> FloatDataSet2D
        get_child_float_data_set_2d(Group self, std::string name) -> FloatDataSet2D
        """
        return _RMF_HDF5.Group_get_child_float_data_set_2d(self, *args)


    def add_child_float_data_set_2d(self, *args):
        """
        add_child_float_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::FloatTraits,2 > props) -> FloatDataSet2D
        add_child_float_data_set_2d(Group self, std::string name) -> FloatDataSet2D
        """
        return _RMF_HDF5.Group_add_child_float_data_set_2d(self, *args)


    def get_child_float_data_set_3d(self, *args):
        """
        get_child_float_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatTraits,3 > props) -> FloatDataSet3D
        get_child_float_data_set_3d(Group self, std::string name) -> FloatDataSet3D
        """
        return _RMF_HDF5.Group_get_child_float_data_set_3d(self, *args)


    def add_child_float_data_set_3d(self, *args):
        """
        add_child_float_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::FloatTraits,3 > props) -> FloatDataSet3D
        add_child_float_data_set_3d(Group self, std::string name) -> FloatDataSet3D
        """
        return _RMF_HDF5.Group_add_child_float_data_set_3d(self, *args)


    def get_child_index_data_set_1d(self, *args):
        """
        get_child_index_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexTraits,1 > props) -> IndexDataSet1D
        get_child_index_data_set_1d(Group self, std::string name) -> IndexDataSet1D
        """
        return _RMF_HDF5.Group_get_child_index_data_set_1d(self, *args)


    def add_child_index_data_set_1d(self, *args):
        """
        add_child_index_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IndexTraits,1 > props) -> IndexDataSet1D
        add_child_index_data_set_1d(Group self, std::string name) -> IndexDataSet1D
        """
        return _RMF_HDF5.Group_add_child_index_data_set_1d(self, *args)


    def get_child_index_data_set_2d(self, *args):
        """
        get_child_index_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexTraits,2 > props) -> IndexDataSet2D
        get_child_index_data_set_2d(Group self, std::string name) -> IndexDataSet2D
        """
        return _RMF_HDF5.Group_get_child_index_data_set_2d(self, *args)


    def add_child_index_data_set_2d(self, *args):
        """
        add_child_index_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IndexTraits,2 > props) -> IndexDataSet2D
        add_child_index_data_set_2d(Group self, std::string name) -> IndexDataSet2D
        """
        return _RMF_HDF5.Group_add_child_index_data_set_2d(self, *args)


    def get_child_index_data_set_3d(self, *args):
        """
        get_child_index_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexTraits,3 > props) -> IndexDataSet3D
        get_child_index_data_set_3d(Group self, std::string name) -> IndexDataSet3D
        """
        return _RMF_HDF5.Group_get_child_index_data_set_3d(self, *args)


    def add_child_index_data_set_3d(self, *args):
        """
        add_child_index_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IndexTraits,3 > props) -> IndexDataSet3D
        add_child_index_data_set_3d(Group self, std::string name) -> IndexDataSet3D
        """
        return _RMF_HDF5.Group_add_child_index_data_set_3d(self, *args)


    def get_child_string_data_set_1d(self, *args):
        """
        get_child_string_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringTraits,1 > props) -> StringDataSet1D
        get_child_string_data_set_1d(Group self, std::string name) -> StringDataSet1D
        """
        return _RMF_HDF5.Group_get_child_string_data_set_1d(self, *args)


    def add_child_string_data_set_1d(self, *args):
        """
        add_child_string_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::StringTraits,1 > props) -> StringDataSet1D
        add_child_string_data_set_1d(Group self, std::string name) -> StringDataSet1D
        """
        return _RMF_HDF5.Group_add_child_string_data_set_1d(self, *args)


    def get_child_string_data_set_2d(self, *args):
        """
        get_child_string_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringTraits,2 > props) -> StringDataSet2D
        get_child_string_data_set_2d(Group self, std::string name) -> StringDataSet2D
        """
        return _RMF_HDF5.Group_get_child_string_data_set_2d(self, *args)


    def add_child_string_data_set_2d(self, *args):
        """
        add_child_string_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::StringTraits,2 > props) -> StringDataSet2D
        add_child_string_data_set_2d(Group self, std::string name) -> StringDataSet2D
        """
        return _RMF_HDF5.Group_add_child_string_data_set_2d(self, *args)


    def get_child_string_data_set_3d(self, *args):
        """
        get_child_string_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringTraits,3 > props) -> StringDataSet3D
        get_child_string_data_set_3d(Group self, std::string name) -> StringDataSet3D
        """
        return _RMF_HDF5.Group_get_child_string_data_set_3d(self, *args)


    def add_child_string_data_set_3d(self, *args):
        """
        add_child_string_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::StringTraits,3 > props) -> StringDataSet3D
        add_child_string_data_set_3d(Group self, std::string name) -> StringDataSet3D
        """
        return _RMF_HDF5.Group_add_child_string_data_set_3d(self, *args)


    def get_child_strings_data_set_1d(self, *args):
        """
        get_child_strings_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringsTraits,1 > props) -> StringsDataSet1D
        get_child_strings_data_set_1d(Group self, std::string name) -> StringsDataSet1D
        """
        return _RMF_HDF5.Group_get_child_strings_data_set_1d(self, *args)


    def add_child_strings_data_set_1d(self, *args):
        """
        add_child_strings_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::StringsTraits,1 > props) -> StringsDataSet1D
        add_child_strings_data_set_1d(Group self, std::string name) -> StringsDataSet1D
        """
        return _RMF_HDF5.Group_add_child_strings_data_set_1d(self, *args)


    def get_child_strings_data_set_2d(self, *args):
        """
        get_child_strings_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringsTraits,2 > props) -> StringsDataSet2D
        get_child_strings_data_set_2d(Group self, std::string name) -> StringsDataSet2D
        """
        return _RMF_HDF5.Group_get_child_strings_data_set_2d(self, *args)


    def add_child_strings_data_set_2d(self, *args):
        """
        add_child_strings_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::StringsTraits,2 > props) -> StringsDataSet2D
        add_child_strings_data_set_2d(Group self, std::string name) -> StringsDataSet2D
        """
        return _RMF_HDF5.Group_add_child_strings_data_set_2d(self, *args)


    def get_child_strings_data_set_3d(self, *args):
        """
        get_child_strings_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::StringsTraits,3 > props) -> StringsDataSet3D
        get_child_strings_data_set_3d(Group self, std::string name) -> StringsDataSet3D
        """
        return _RMF_HDF5.Group_get_child_strings_data_set_3d(self, *args)


    def add_child_strings_data_set_3d(self, *args):
        """
        add_child_strings_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::StringsTraits,3 > props) -> StringsDataSet3D
        add_child_strings_data_set_3d(Group self, std::string name) -> StringsDataSet3D
        """
        return _RMF_HDF5.Group_add_child_strings_data_set_3d(self, *args)


    def get_child_floats_data_set_1d(self, *args):
        """
        get_child_floats_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatsTraits,1 > props) -> FloatsDataSet1D
        get_child_floats_data_set_1d(Group self, std::string name) -> FloatsDataSet1D
        """
        return _RMF_HDF5.Group_get_child_floats_data_set_1d(self, *args)


    def add_child_floats_data_set_1d(self, *args):
        """
        add_child_floats_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::FloatsTraits,1 > props) -> FloatsDataSet1D
        add_child_floats_data_set_1d(Group self, std::string name) -> FloatsDataSet1D
        """
        return _RMF_HDF5.Group_add_child_floats_data_set_1d(self, *args)


    def get_child_floats_data_set_2d(self, *args):
        """
        get_child_floats_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatsTraits,2 > props) -> FloatsDataSet2D
        get_child_floats_data_set_2d(Group self, std::string name) -> FloatsDataSet2D
        """
        return _RMF_HDF5.Group_get_child_floats_data_set_2d(self, *args)


    def add_child_floats_data_set_2d(self, *args):
        """
        add_child_floats_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::FloatsTraits,2 > props) -> FloatsDataSet2D
        add_child_floats_data_set_2d(Group self, std::string name) -> FloatsDataSet2D
        """
        return _RMF_HDF5.Group_add_child_floats_data_set_2d(self, *args)


    def get_child_floats_data_set_3d(self, *args):
        """
        get_child_floats_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::FloatsTraits,3 > props) -> FloatsDataSet3D
        get_child_floats_data_set_3d(Group self, std::string name) -> FloatsDataSet3D
        """
        return _RMF_HDF5.Group_get_child_floats_data_set_3d(self, *args)


    def add_child_floats_data_set_3d(self, *args):
        """
        add_child_floats_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::FloatsTraits,3 > props) -> FloatsDataSet3D
        add_child_floats_data_set_3d(Group self, std::string name) -> FloatsDataSet3D
        """
        return _RMF_HDF5.Group_add_child_floats_data_set_3d(self, *args)


    def get_child_ints_data_set_1d(self, *args):
        """
        get_child_ints_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntsTraits,1 > props) -> IntsDataSet1D
        get_child_ints_data_set_1d(Group self, std::string name) -> IntsDataSet1D
        """
        return _RMF_HDF5.Group_get_child_ints_data_set_1d(self, *args)


    def add_child_ints_data_set_1d(self, *args):
        """
        add_child_ints_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IntsTraits,1 > props) -> IntsDataSet1D
        add_child_ints_data_set_1d(Group self, std::string name) -> IntsDataSet1D
        """
        return _RMF_HDF5.Group_add_child_ints_data_set_1d(self, *args)


    def get_child_ints_data_set_2d(self, *args):
        """
        get_child_ints_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntsTraits,2 > props) -> IntsDataSet2D
        get_child_ints_data_set_2d(Group self, std::string name) -> IntsDataSet2D
        """
        return _RMF_HDF5.Group_get_child_ints_data_set_2d(self, *args)


    def add_child_ints_data_set_2d(self, *args):
        """
        add_child_ints_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IntsTraits,2 > props) -> IntsDataSet2D
        add_child_ints_data_set_2d(Group self, std::string name) -> IntsDataSet2D
        """
        return _RMF_HDF5.Group_add_child_ints_data_set_2d(self, *args)


    def get_child_ints_data_set_3d(self, *args):
        """
        get_child_ints_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IntsTraits,3 > props) -> IntsDataSet3D
        get_child_ints_data_set_3d(Group self, std::string name) -> IntsDataSet3D
        """
        return _RMF_HDF5.Group_get_child_ints_data_set_3d(self, *args)


    def add_child_ints_data_set_3d(self, *args):
        """
        add_child_ints_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IntsTraits,3 > props) -> IntsDataSet3D
        add_child_ints_data_set_3d(Group self, std::string name) -> IntsDataSet3D
        """
        return _RMF_HDF5.Group_add_child_ints_data_set_3d(self, *args)


    def get_child_indexes_data_set_1d(self, *args):
        """
        get_child_indexes_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexesTraits,1 > props) -> IndexesDataSet1D
        get_child_indexes_data_set_1d(Group self, std::string name) -> IndexesDataSet1D
        """
        return _RMF_HDF5.Group_get_child_indexes_data_set_1d(self, *args)


    def add_child_indexes_data_set_1d(self, *args):
        """
        add_child_indexes_data_set_1d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IndexesTraits,1 > props) -> IndexesDataSet1D
        add_child_indexes_data_set_1d(Group self, std::string name) -> IndexesDataSet1D
        """
        return _RMF_HDF5.Group_add_child_indexes_data_set_1d(self, *args)


    def get_child_indexes_data_set_2d(self, *args):
        """
        get_child_indexes_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexesTraits,2 > props) -> IndexesDataSet2D
        get_child_indexes_data_set_2d(Group self, std::string name) -> IndexesDataSet2D
        """
        return _RMF_HDF5.Group_get_child_indexes_data_set_2d(self, *args)


    def add_child_indexes_data_set_2d(self, *args):
        """
        add_child_indexes_data_set_2d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IndexesTraits,2 > props) -> IndexesDataSet2D
        add_child_indexes_data_set_2d(Group self, std::string name) -> IndexesDataSet2D
        """
        return _RMF_HDF5.Group_add_child_indexes_data_set_2d(self, *args)


    def get_child_indexes_data_set_3d(self, *args):
        """
        get_child_indexes_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetAccessPropertiesD< RMF::HDF5::IndexesTraits,3 > props) -> IndexesDataSet3D
        get_child_indexes_data_set_3d(Group self, std::string name) -> IndexesDataSet3D
        """
        return _RMF_HDF5.Group_get_child_indexes_data_set_3d(self, *args)


    def add_child_indexes_data_set_3d(self, *args):
        """
        add_child_indexes_data_set_3d(Group self, std::string name, RMF::HDF5::DataSetCreationPropertiesD< RMF::HDF5::IndexesTraits,3 > props) -> IndexesDataSet3D
        add_child_indexes_data_set_3d(Group self, std::string name) -> IndexesDataSet3D
        """
        return _RMF_HDF5.Group_add_child_indexes_data_set_3d(self, *args)


    def get_child_group(self, *args):
        """
        get_child_group(Group self, unsigned int i) -> Group
        get_child_group(Group self, std::string name) -> Group
        """
        return _RMF_HDF5.Group_get_child_group(self, *args)

    __swig_destroy__ = _RMF_HDF5.delete_Group
    __del__ = lambda self: None
Group_swigregister = _RMF_HDF5.Group_swigregister
Group_swigregister(Group)

class File(Group):
    """Proxy of C++ RMF::HDF5::File class."""

    __swig_setmethods__ = {}
    for _s in [Group]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, File, name, value)
    __swig_getmethods__ = {}
    for _s in [Group]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, File, name)

    def __str__(self):
        """__str__(File self) -> std::string"""
        return _RMF_HDF5.File___str__(self)


    def __repr__(self):
        """__repr__(File self) -> std::string"""
        return _RMF_HDF5.File___repr__(self)


    def __init__(self):
        """__init__(RMF::HDF5::File self) -> File"""
        this = _RMF_HDF5.new_File()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def get_name(self):
        """get_name(File self) -> std::string"""
        return _RMF_HDF5.File_get_name(self)


    def flush(self):
        """flush(File self)"""
        return _RMF_HDF5.File_flush(self)

    __swig_destroy__ = _RMF_HDF5.delete_File
    __del__ = lambda self: None
File_swigregister = _RMF_HDF5.File_swigregister
File_swigregister(File)


def create_file(name):
    """create_file(std::string name) -> File"""
    return _RMF_HDF5.create_file(name)

def open_file(name):
    """open_file(std::string name) -> File"""
    return _RMF_HDF5.open_file(name)

def open_file_read_only_returning_nonconst(name):
    """open_file_read_only_returning_nonconst(std::string name) -> File"""
    return _RMF_HDF5.open_file_read_only_returning_nonconst(name)
# This file is compatible with both classic and new-style classes.


